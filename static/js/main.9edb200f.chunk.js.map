{"version":3,"sources":["context.js","Helpers/Sec2time.js","Todo/TodoItem.js","Todo/TodoList.js","Todo/TodoForm.js","Project/ProjectForm.js","Helpers/ChangeFav.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","timeInSeconds","pad","num","size","slice","time","parseFloat","toFixed","hours","Math","floor","minutes","seconds","styles","li","display","justifyContent","alignItems","marginBottom","padding","boxShadow","TodoItem","project","todo","currentId","index","useContext","removeTodo","toggleTodo","toggleGo","classes","completed","push","id","style","className","join","onClick","bind","Sec2time","duration","title","round","money","ul","listStyle","textAlign","margin","width","TodoList","props","todos","map","i","projects","find","projectId","key","form","input","paddingLeft","flexGrow","border","height","button","cursor","background","color","TodoForm","addTodo","titleInput","defaultTitle","useState","setTitle","value","onChange","e","target","clear","useTitleInput","projectInput","defaultProjectId","setProjectId","useProjectInput","onSubmit","preventDefault","trim","console","log","alert","placeholder","tariff","type","ProjectForm","addProject","tariffInput","defaultTariff","setTariff","useTariffInput","path","link","document","querySelector","createElement","rel","head","appendChild","href","App","setTodos","setProjects","totalTime","setTotalTime","setCurrentId","timer","setTimer","useEffect","storageTodos","localStorage","getItem","JSON","parse","storageProjects","storageTotalTime","setItem","stringify","clearInterval","ChangeFav","setInterval","minuteCost","prevTT","parseInt","Provider","filter","concat","Date","now","editTodo","todoIndex","findIndex","length","src","alt","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9edb200f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Context = React.createContext();\n\nexport default Context","export default function(timeInSeconds) {\r\n    const pad = function(num, size) { return ('000' + num).slice(size * -1); };\r\n    const time = parseFloat(timeInSeconds).toFixed(3);\r\n    const hours = Math.floor(time / 60 / 60);\r\n    const minutes = Math.floor(time / 60) % 60;\r\n    const seconds = Math.floor(time - minutes * 60);\r\n\r\n    return pad(hours, 2) + ':' + pad(minutes, 2) + ':' + pad(seconds, 2);\r\n}\r\n\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Context from '../context';\nimport Sec2time from '../Helpers/Sec2time';\n\nconst styles = {\n  li: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '.5rem',\n    padding: '.5rem',\n    boxShadow: '1px 1px 4px 0px rgba(0,0,0,.5)'\n  },\n};\n\nfunction TodoItem({project, todo, index, currentId}) {\n  const {removeTodo, toggleTodo, toggleGo} = React.useContext(Context);\n  let classes = ['todoTitle'];\n  if (todo.completed) {\n    classes.push('done');\n  }\n  if (todo.id === currentId) {\n    classes.push('go');\n  }\n  return (\n    <li style={styles.li}>\n      <span className={classes.join(' ')}>\n        <span className=\"action goAction\" onClick={toggleGo.bind(null, todo.id)}></span>\n        <span className=\"action doneAction\" onClick={toggleTodo.bind(null, todo.id)}></span>\n        <span className=\"text duration\">\n        {Sec2time(todo.duration)}\n        </span>\n        <span className=\"text title\">\n          <strong>{project.title}:</strong>&nbsp;{todo.title}\n        </span>\n        <span className=\"text money\">\n        {Math.round(todo.money)}\n        </span>\n      </span>\n      <button className=\"action removeAction\" onClick={removeTodo.bind(null, todo.id)}>&nbsp;</button>\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  project: PropTypes.object.isRequired,\n  todo: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired,\n  currentId: PropTypes.number.isRequired\n}\n\nexport default TodoItem","import React from 'react';\nimport Todoitem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n  ul: {\n    listStyle: 'none',\n    textAlign: 'left',\n    margin: 0,\n    padding: 0,\n    width: '100%'\n  }\n};\n\nfunction  TodoList (props) {\n  return (\n    <ul style={styles.ul}>\n        {props.todos.map((todo, i) => {\n          let project = props.projects.find((project) => project.id === todo.projectId);\n          return <Todoitem currentId={props.currentId} project={project} todo={todo} key={todo.id} index={i} />;\n        })}\n    </ul>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  projects: PropTypes.arrayOf(PropTypes.object).isRequired,\n  currentId: PropTypes.number.isRequired\n}\n\nexport default TodoList","import React from 'react';\n//import PropTypes from 'prop-types';\nimport Context from '../context';\n\nconst styles = {\n  form: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '.5rem',\n    padding: '.5rem',\n    boxShadow: '1px 1px 4px 0px rgba(0,0,0,.5)'\n  },\n  input: {\n    paddingLeft: '1rem',\n    flexGrow: 1,\n    border: 0,\n    height: '1.5rem'\n  },\n  button: {\n    cursor: 'pointer',\n    background: '#00FFA9',\n    color: '#fff',\n    border: 0,\n    height: '1.5rem'\n  }\n}\n\nfunction useTitleInput(defaultTitle = '') {\n  const [title, setTitle] = React.useState(defaultTitle);\n\n  return {\n    bind: {\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    },\n    clear: () => setTitle(''),\n    title: () => title\n  }\n}\n\nfunction useProjectInput(defaultProjectId = '') {\n  const [projectId, setProjectId] = React.useState(defaultProjectId);\n\n  return {\n    onChange: e => setProjectId(e.target.value),\n    clear: () => setProjectId(''),\n    projectId: projectId\n  }\n}\n\nfunction TodoForm(props) {\n  const {addTodo} = React.useContext(Context);\n  const titleInput = useTitleInput('');\n  const projectInput = useProjectInput('');\n\n  function submitTodo (e) {\n    e.preventDefault();\n    if (titleInput.title().trim() && projectInput.projectId) {\n      console.log('projectId: ' + projectInput.projectId);\n      addTodo(titleInput.title(), projectInput.projectId);\n      titleInput.clear();\n      projectInput.clear();\n    } else {\n      alert('Нужно заполнить название и выбрать проект');\n    }\n  }\n  return (\n    <form style={styles.form} onSubmit={submitTodo}>\n      <input placeholder=\"Название задачи\" style={styles.input} {...titleInput.bind} />\n      <select style={styles.input} value={projectInput.projectId} onChange={projectInput.onChange}>\n      <option value=\"\">Выберите проект...</option>\n        {props.projects.map((project, i) => {\n          return <option key={project.id} value={project.id}>{project.title}: {project.tariff}</option>;\n        })}\n      </select>\n      <button style={styles.button} type=\"submit\">Создать задачу</button>\n    </form>\n  );\n}\n\nexport default TodoForm;","import React from 'react';\nimport Context from '../context';\n\nconst styles = {\n  form: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '.5rem',\n    padding: '.5rem',\n    boxShadow: '1px 1px 4px 0px rgba(0,0,0,.5)'\n  },\n  input: {\n    paddingLeft: '1rem',\n    flexGrow: 1,\n    border: 0,\n    height: '1.5rem'\n  },\n  button: {\n    cursor: 'pointer',\n    background: '#293685',\n    color: '#fff',\n    border: 0,\n    height: '1.5rem'\n  }\n}\n\nfunction useTitleInput(defaultTitle = '') {\n  const [title, setTitle] = React.useState(defaultTitle);\n\n  return {\n    bind: {\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    },\n    clear: () => setTitle(''),\n    title: () => title\n  }\n}\n\nfunction useTariffInput(defaultTariff = '') {\n  const [tariff, setTariff] = React.useState(defaultTariff);\n\n  return {\n    bind: {\n      value: tariff,\n      onChange: e => setTariff(e.target.value)\n    },\n    clear: () => setTariff(''),\n    tariff: () => tariff\n  }\n}\n\nexport default function ProjectForm() {\n  const {addProject} = React.useContext(Context);\n  const titleInput = useTitleInput('');\n  const tariffInput = useTariffInput('');\n\n  function submitProject (e) {\n    e.preventDefault();\n    if (titleInput.title().trim()) {\n      addProject(titleInput.title(), tariffInput.tariff());\n      titleInput.clear();\n      tariffInput.clear();\n    } else {\n      alert('Нужно заполнить название');\n    }\n  }\n  return (\n    <form style={styles.form} onSubmit={submitProject}>\n      <input placeholder=\"Название проекта\" style={styles.input} {...titleInput.bind} />\n      <input placeholder=\"Стоимость часа\" style={styles.input} {...tariffInput.bind} />\n      <button style={styles.button} type=\"submit\">Создать проект</button>\n    </form>\n  );\n}","export default function (path) {\r\n    let link = document.querySelector('link[rel=\"shortcut icon\"]') ||\r\n    document.querySelector('link[rel=\"icon\"]');\r\n\r\n    if (!link) {\r\n        link = document.createElement('link');\r\n        link.id = 'favicon';\r\n        link.rel = 'shortcut icon';\r\n        document.head.appendChild(link);\r\n    }\r\n\r\n    link.href = path;\r\n}","import React from 'react';\nimport './App.css';\nimport TodoList from './Todo/TodoList';\n// import Modal from './Modal/Modal';\nimport TodoForm from './Todo/TodoForm';\nimport ProjectForm from './Project/ProjectForm';\nimport Context from './context';\nimport Sec2time from './Helpers/Sec2time';\nimport ChangeFav from './Helpers/ChangeFav';\n\n// const TodoForm = React.lazy(() => import('./Todo/TodoForm'));\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    // {id: 1, projectId: 1, title: 'Купить хлеб', completed: true, duration: 0, money: 0, minuteCost: 0},\n  ]);\n\n  const [projects, setProjects] = React.useState([\n    // {id: 1, title: 'Проект', tariff: 800},\n  ]);\n\n  const [totalTime, setTotalTime] = React.useState(0);\n  const [currentId, setCurrentId] = React.useState(0);\n  const [timer, setTimer] = React.useState(0);\n\n  React.useEffect(() => {\n    let storageTodos = localStorage.getItem('todos');\n    storageTodos && setTodos(JSON.parse(storageTodos));\n\n    let storageProjects = localStorage.getItem('projects');\n    storageProjects && setProjects(JSON.parse(storageProjects));\n\n    let storageTotalTime = localStorage.getItem('totalTime');\n    storageTotalTime && setTotalTime(storageTotalTime);\n  \n  }, []);\n\n  React.useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n  }, [todos]);\n\n  React.useEffect(() => {\n    localStorage.setItem('projects', JSON.stringify(projects))\n  }, [projects]);\n\n  React.useEffect(() => {\n    localStorage.setItem('totalTime', totalTime)\n  }, [totalTime]);\n\n  React.useEffect(() => {\n    console.log(currentId);\n    if (!currentId) {\n      clearInterval(timer);\n      ChangeFav('./favicon.ico');\n    } else {\n      clearInterval(timer);\n      ChangeFav('./favicon-go.ico');\n      setTimer(setInterval(() => {\n        setTodos(\n          todos.map(todo => {\n            if (todo.id === currentId) {\n              todo.duration++;\n              if (todo.duration % 60 === 0) {\n                todo.money += todo.minuteCost;\n              }\n              setTotalTime(prevTT => parseInt(prevTT, 10) + 1);\n            }\n            return todo;\n          })\n        );\n      }, 1000));\n    }\n  }, [currentId]);\n\n  function toggleTodo(id) {\n    console.log('toggleTodo ' + id);\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n          if (todo.completed && (id === currentId)) {\n            setCurrentId(0);\n          }\n        }\n        return todo;\n      })\n    );\n  }\n\n  function removeTodo(id) {\n    console.log('removeTodo ' + id);\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  function addTodo(title, projectId) {\n    console.log('addTodo ' + title);\n    projectId = parseInt(projectId, 10);\n    let project = projects.find((project) => project.id === projectId);\n    setTodos(todos.concat([{\n      id: Date.now(),\n      projectId,\n      title,\n      completed: false,\n      duration: 0,\n      money: 0,\n      minuteCost: parseInt(project.tariff, 10)/60\n    }]));\n  }\n\n  function editTodo(id, title) {\n    console.log('editTodo ' + id);\n    let todoIndex = todos.findIndex((todo) => todo.id === id);\n    console.log(todos[todoIndex].title = title);\n    setTodos(todos);\n  }\n\n  function addProject(title, tariff) {\n    console.log('addProject ' + title);\n    setProjects(projects.concat([{\n      id: Date.now(),\n      title,\n      tariff: parseInt(tariff, 10)\n    }]));\n  }\n\n  function toggleGo(id) {\n    console.log('toggleGo ' + id);\n\n    for (let i=0; i < todos.length; i++) {\n      if ((todos[i].id === id) && !todos[i].completed) {\n        if (id === currentId) {\n          setCurrentId(0);\n        } else {\n          setCurrentId(id);\n        }\n        break;\n      }\n    }\n  }\n\n  return (\n    <Context.Provider value={{removeTodo, toggleTodo, addTodo, editTodo, addProject, toggleGo}}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>\n            <img src=\"./time-2-32.png\" alt=\"Tasknik\"/>&nbsp;\n            Tasknik\n          </div>\n        </header>\n        <div className=\"App-content\">\n          <div>\n            {/* <Counter initialCount={0}/> */}\n            {/* <Modal/> */}\n            {/* <React.Suspense fallback={<p>Loading...</p>}>\n              <TodoForm />\n            </React.Suspense> */}\n            {todos.length? <TodoList todos={todos} projects={projects} currentId={currentId} /> : <p>Нет задач</p>}\n            <TodoForm projects={projects} />\n            <ProjectForm />\n          </div>\n        </div>\n        <footer className=\"App-footer\">\n          <div>\n            Всего: {Sec2time(totalTime)} &nbsp;\n          </div>\n          <span title=\"Сбросить общий таймер\" className=\"action resetTotalAction\" onClick={() => setTotalTime(0)}></span>\n        </footer>\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}