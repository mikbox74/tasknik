{"version":3,"sources":["context.js","Helpers/Sec2time.js","Todo/TodoItem.js","Todo/TodoList.js","Todo/ProjectSelectModal.js","Todo/TodoForm.js","Project/ProjectForm.js","Helpers/ChangeFav.js","Modal/Modal.js","Todo/EditTodoModal.js","App.js","index.js"],"names":["Context","React","createContext","timeInSeconds","pad","num","size","padStart","time","parseFloat","toFixed","hours","Math","floor","minutes","seconds","slice","styles","li","display","justifyContent","alignItems","marginBottom","padding","boxShadow","TodoItem","project","todo","currentId","index","useContext","removeTodo","toggleTodo","toggleGo","toggleCheck","setIsEditModalOpen","classes","completed","push","id","style","className","join","type","onChange","bind","onClick","color","strokeWidth","Sec2time","duration","title","description","round","money","ul","listStyle","textAlign","margin","width","TodoList","props","todos","map","i","projects","find","projectId","key","ProjectSelectModal","isOpen","onClose","onSelect","removeProject","tariff","e","stopPropagation","window","confirm","form","input","paddingLeft","flexGrow","border","height","button","cursor","background","TodoForm","addTodo","titleInput","defaultTitle","useState","setTitle","value","target","clear","useTitleInput","projectInput","defaultProjectId","setProjectId","selectedProject","setSelectedProject","selectProject","useProjectInput","isModalOpen","setIsModalOpen","onSubmit","preventDefault","trim","console","log","alert","placeholder","ProjectForm","addProject","tariffInput","defaultTariff","setTariff","useTariffInput","path","link","document","querySelector","createElement","rel","head","appendChild","href","Modal","tmpDuration","reduce","accumulator","currentValue","Fragment","EditTodoModal","editTodo","closeEditModal","setDescription","setHours","setMinutes","setSeconds","useEffect","totalSeconds","handleClose","event","newTitle","newDescription","parseInt","newMoney","minuteCost","htmlFor","required","rows","min","max","buttons","marginLeft","borderRadius","button2","button3","appTitle","appSigns","appSignKey","App","setTodos","setProjects","selected","setSelected","totalTime","setTotalTime","setCurrentId","timer","setTimer","isEditModalOpen","setIsEditModalOpenState","todoToEdit","setTodoToEdit","selectedTotalTime","setSelectedTotalTime","selectedTotalAmount","setSelectedTotalAmount","lastStartedTodoId","setLastStartedTodoId","Notification","permission","notificationPermission","setNotificationPermission","requestPermission","then","storageTodos","localStorage","getItem","JSON","parse","storageProjects","storageTotalTime","setItem","stringify","clearInterval","ChangeFav","startAt","Date","now","setInterval","durationMs","diff","prevTT","indexOf","calcSelectedTotals","useCallback","p","notificationTitle","body","silent","error","length","toggleLastGo","filter","handleExtensionEvent","detail","data","hotkey","addEventListener","removeEventListener","active","contextData","checked","concat","item","openEditModal","Provider","src","alt","packageJson","version","selector","createElementNS","accept","files","file","reader","FileReader","result","location","reload","readAsText","dispatchEvent","MouseEvent","importData","blob","date","name","getDate","toString","getMonth","getFullYear","getHours","getMinutes","getSeconds","navigator","msSaveBlob","saver","blobURL","URL","createObjectURL","Blob","download","revokeObjectURL","exportData","paddingRight","ReactDOM","render","getElementById"],"mappings":"0nCAIeA,G,MAFCC,IAAMC,iBCFP,WAASC,GACpB,IAAMC,EAAM,SAACC,EAAKC,GAAN,OAAgBD,EAAM,IAAIE,SAASD,EAAM,MAE/CE,EAAOC,WAAWN,GAAeO,QAAQ,GACzCC,EAAQC,KAAKC,MAAML,EAAO,GAAK,IAC/BM,EAAUF,KAAKC,MAAML,EAAO,IAAM,GAClCO,EAAUH,KAAKC,MAAML,EAAiB,GAAVM,GAElC,OAAOV,EAAIO,EAAO,GAAK,IAAMP,EAAIU,EAAS,GAAK,KANf,MAM6BC,GANhBC,OAAc,EAMW,I,gCCFpEC,EAAS,CACbC,GAAI,CACFC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,aAAc,QACdC,QAAS,QACTC,UAAW,mCAuDAC,MAnDf,YAAsD,IAAnCC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,KAAaC,GAAY,EAAnBC,MAAmB,EAAZD,WACvC,EAA4E3B,IAAM6B,WAAW9B,GAAtF+B,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SAAUC,EAAzC,EAAyCA,YAAaC,EAAtD,EAAsDA,mBAClDC,EAAU,CAAC,aAOf,OANIT,EAAKU,WACPD,EAAQE,KAAK,QAEXX,EAAKY,KAAOX,GACdQ,EAAQE,KAAK,MAGb,wBAAIE,MAAOvB,EAAOC,IAChB,0BAAMuB,UAAWL,EAAQM,KAAK,MAC5B,2BAAOC,KAAK,WAAWC,SAAUV,EAAYW,KAAK,KAAMlB,EAAKY,MAC7D,0BAAME,UAAU,kBAAkBK,QAASb,EAASY,KAAK,KAAMlB,EAAKY,KAChEZ,EAAKY,KAAOX,EAAa,kBAAC,IAAD,CAAatB,KAAM,GAAIyC,MAAM,MAAMC,YAAY,MAAS,kBAAC,IAAD,CAAY1C,KAAM,GAAIyC,MAAM,OAAOC,YAAY,OAEpI,0BAAMP,UAAU,oBAAoBK,QAASd,EAAWa,KAAK,KAAMlB,EAAKY,KACtE,kBAAC,IAAD,CAAOjC,KAAM,GAAIyC,MAAM,QAAQC,YAAY,OAE7C,0BAAMP,UAAU,iBACfQ,EAAStB,EAAKuB,WAEf,0BACET,UAAU,+BACVK,QAAS,kBAAMX,GAAmB,EAAMR,IACxCwB,MAAOxB,EAAKyB,YAAczB,EAAKyB,YAAc,uHAE7C,gCAAS1B,EAAQyB,MAAjB,KALF,OAK0CxB,EAAKwB,OAE/C,0BAAMV,UAAU,cACf7B,KAAKyC,MAAM1B,EAAK2B,SAOnB,4BAAQb,UAAU,sBAAsBK,QAASf,EAAWc,KAAK,KAAMlB,EAAKY,KAC1E,kBAAC,IAAD,CAASjC,KAAM,GAAIyC,MAAM,MAAMC,YAAY,SCnD7C/B,EAAS,CACbsC,GAAI,CACFC,UAAW,OACXC,UAAW,OACXC,OAAQ,EACRnC,QAAS,EACToC,MAAO,SAmCIC,MA/Bf,SAAoBC,GAWlB,OACE,6BACA,4BAAKA,EAAMV,OACX,wBAAIX,MAAOvB,EAAOsC,IACbM,EAAMC,MAAMC,KAAI,SAACpC,EAAMqC,GACtB,IAAItC,EAAUmC,EAAMI,SAASC,MAAK,SAACxC,GAAD,OAAaA,EAAQa,KAAOZ,EAAKwC,aACnE,OAAO,kBAAC,EAAD,CAAUvC,UAAWiC,EAAMjC,UAAWF,QAASA,EAASC,KAAMA,EAAMyC,IAAKzC,EAAKY,GAAIV,MAAOmC,U,gBCsB3FK,MA/Cf,YAAsE,IAAxCC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,QAASN,EAAsB,EAAtBA,SAAUO,EAAY,EAAZA,SAChDC,EAAiBxE,IAAM6B,WAAW9B,GAAlCyE,cACP,OAAKH,EAGH,yBAAK7B,UAAU,SACb,yBAAKA,UAAU,cACb,qHACA,wBAAIA,UAAU,gBACXwB,EAASF,KAAI,SAAArC,GAAO,OACnB,wBACE0C,IAAK1C,EAAQa,GACbE,UAAU,eACVK,QAAS,WACP0B,EAAS9C,GACT6C,MAGC7C,EAAQyB,MARb,KAQsBzB,EAAQgD,OAC1B,4BACEjC,UAAU,wBACVK,QAAS,SAAC6B,GACRA,EAAEC,kBACEC,OAAOC,QAAP,4MAAyDpD,EAAQyB,MAAjE,yJACFsB,EAAc/C,EAAQa,IACtBgC,OAIJ,kBAAC,IAAD,CAAQjE,KAAM,GAAIyC,MAAM,MAAMC,YAAY,YAKpD,4BAAQF,QAASyB,GAAjB,UAhCc,MCHhBtD,EAAS,CACb8D,KAAM,CACJ5D,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,aAAc,QACdC,QAAS,QACTC,UAAW,kCAEbwD,MAAO,CACLC,YAAa,OACbC,SAAU,EACVC,OAAQ,EACRC,OAAQ,UAEVC,OAAQ,CACNC,OAAQ,UACRC,WAAY,UACZxC,MAAO,OACPoC,OAAQ,EACRC,OAAQ,WAgFGI,MA7Cf,SAAkB3B,GAChB,IAAO4B,EAAWxF,IAAM6B,WAAW9B,GAA5ByF,QACDC,EAjCR,WAA2C,IAApBC,EAAmB,uDAAJ,GACpC,EAA0B1F,IAAM2F,SAASD,GAAzC,mBAAOxC,EAAP,KAAc0C,EAAd,KAEA,MAAO,CACLhD,KAAM,CACJiD,MAAO3C,EACPP,SAAU,SAAA+B,GAAC,OAAIkB,EAASlB,EAAEoB,OAAOD,SAEnCE,MAAO,kBAAMH,EAAS,KACtB1C,MAAO,kBAAMA,IAwBI8C,CAAc,IAC3BC,EArBR,WAAiD,IAAxBC,EAAuB,uDAAJ,GAC1C,EAAkClG,IAAM2F,SAASO,GAAjD,mBAAOhC,EAAP,KAAkBiC,EAAlB,KACA,EAA8CnG,IAAM2F,SAAS,MAA7D,mBAAOS,EAAP,KAAwBC,EAAxB,KAEA,MAAO,CACLC,cAAe,SAAC7E,GACd0E,EAAa1E,EAAQa,IACrB+D,EAAmB5E,IAErBsE,MAAO,WACLI,EAAa,IACbE,EAAmB,OAErBnC,YACAkC,mBAOmBG,CAAgB,IACrC,EAAsCvG,IAAM2F,UAAS,GAArD,mBAAOa,EAAP,KAAoBC,EAApB,KAaA,OACE,0BAAMlE,MAAOvB,EAAO8D,KAAM4B,SAZ5B,SAAqBhC,GACnBA,EAAEiC,iBACElB,EAAWvC,QAAQ0D,QAAUX,EAAa/B,WAC5C2C,QAAQC,IAAI,cAAgBb,EAAa/B,WACzCsB,EAAQC,EAAWvC,QAAS+C,EAAa/B,WACzCuB,EAAWM,QACXE,EAAaF,SAEbgB,MAAM,mOAKN,qEACA,yCAAOC,YAAY,wFAAkBzE,MAAOvB,EAAO+D,OAAWU,EAAW7C,OACzE,4BACEF,KAAK,SACLH,MAAK,2BACAvB,EAAO+D,OADP,IAEHM,OAAQ,UACRC,WAAYW,EAAaG,gBAAkB,OAAS,YAEtDvD,QAAS,kBAAM4D,GAAe,KAE7BR,EAAaG,gBAAb,UACMH,EAAaG,gBAAgBlD,MADnC,aAC6C+C,EAAaG,gBAAgB3B,QACvE,4FAEN,kBAAC,EAAD,CACEJ,OAAQmC,EACRlC,QAAS,kBAAMmC,GAAe,IAC9BzC,SAAUJ,EAAMI,SAChBO,SAAU0B,EAAaK,gBAEzB,4BAAQ/D,MAAOvB,EAAOoE,OAAQ1C,KAAK,UAAnC,qFCjGA1B,EAAS,CACb8D,KAAM,CACJ5D,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,aAAc,QACdC,QAAS,QACTC,UAAW,kCAEbwD,MAAO,CACLC,YAAa,OACbC,SAAU,EACVC,OAAQ,EACRC,OAAQ,UAEVC,OAAQ,CACNC,OAAQ,UACRC,WAAY,UACZxC,MAAO,OACPoC,OAAQ,EACRC,OAAQ,WA8BG,SAAS8B,IACtB,IAAOC,EAAclH,IAAM6B,WAAW9B,GAA/BmH,WACDzB,EA5BR,WAA2C,IAApBC,EAAmB,uDAAJ,GACpC,EAA0B1F,IAAM2F,SAASD,GAAzC,mBAAOxC,EAAP,KAAc0C,EAAd,KAEA,MAAO,CACLhD,KAAM,CACJiD,MAAO3C,EACPP,SAAU,SAAA+B,GAAC,OAAIkB,EAASlB,EAAEoB,OAAOD,SAEnCE,MAAO,kBAAMH,EAAS,KACtB1C,MAAO,kBAAMA,IAmBI8C,CAAc,IAC3BmB,EAhBR,WAA6C,IAArBC,EAAoB,uDAAJ,GACtC,EAA4BpH,IAAM2F,SAASyB,GAA3C,mBAAO3C,EAAP,KAAe4C,EAAf,KAEA,MAAO,CACLzE,KAAM,CACJiD,MAAOpB,EACP9B,SAAU,SAAA+B,GAAC,OAAI2C,EAAU3C,EAAEoB,OAAOD,SAEpCE,MAAO,kBAAMsB,EAAU,KACvB5C,OAAQ,kBAAMA,IAOI6C,CAAe,IAYnC,OACE,0BAAM/E,MAAOvB,EAAO8D,KAAM4B,SAX5B,SAAwBhC,GACtBA,EAAEiC,iBACElB,EAAWvC,QAAQ0D,QACrBM,EAAWzB,EAAWvC,QAASiE,EAAY1C,UAC3CgB,EAAWM,QACXoB,EAAYpB,SAEZgB,MAAM,4IAKN,qEACA,yCAAOC,YAAY,8FAAmBzE,MAAOvB,EAAO+D,OAAWU,EAAW7C,OAC1E,yCAAOoE,YAAY,kFAAiBzE,MAAOvB,EAAO+D,OAAWoC,EAAYvE,OACzE,4BAAQL,MAAOvB,EAAOoE,OAAQ1C,KAAK,UAAnC,oFCzES,eAAU6E,GACrB,IAAIC,EAAOC,SAASC,cAAc,8BAClCD,SAASC,cAAc,oBAElBF,KACDA,EAAOC,SAASE,cAAc,SACzBrF,GAAK,UACVkF,EAAKI,IAAM,gBACXH,SAASI,KAAKC,YAAYN,IAG9BA,EAAKO,KAAOR,G,MCmCDS,MAxCf,SAAepE,GACb,IAAO6C,EAAkBzG,IAAM6B,WAAW9B,GAAnC0G,eACHzC,EAAWJ,EAAMI,SAASF,KAAI,SAACrC,GACjC,IAAIwG,EAAcrE,EAAMC,MAAMC,KAAI,SAACpC,GACjC,OAAIA,EAAKwC,YAAczC,EAAQa,GACtBZ,EAAKuG,YAEP,KACNC,QAAO,SAACC,EAAaC,GAAd,OAA+BD,EAAcC,IAAc,GACrE,MAAO,CACL9F,GAAIb,EAAQa,GACZY,MAAOzB,EAAQyB,MACf+E,kBAGJ,OACE,kBAAC,IAAMI,SAAP,KACGzE,EAAMS,QAAW,yBAAK7B,UAAU,SAC/B,yBAAKA,UAAU,cACb,6FAGAwB,EAASF,KAAI,SAAArC,GACX,GAAIA,EAAQwG,YACV,OAAQ,uBAAG9D,IAAK1C,EAAQa,IAAKb,EAAQyB,MAA7B,MAAuCF,EAASvB,EAAQwG,iBAGpE,4BAAQpF,QAAS,kBAAM4D,GAAe,KAAtC,Y,MCsGK6B,MAlIf,YAA0C,IAAjBjE,EAAgB,EAAhBA,OAAQ3C,EAAQ,EAARA,KAC/B,EAAqCG,qBAAW9B,GAAxCwI,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,eAElB,EAA0B7C,mBAAS,IAAnC,mBAAOzC,EAAP,KAAc0C,EAAd,KACA,EAAsCD,mBAAS,IAA/C,mBAAOxC,EAAP,KAAoBsF,EAApB,KACA,EAA0B9C,mBAAS,GAAnC,mBAAOjF,EAAP,KAAcgI,EAAd,KACA,EAA8B/C,mBAAS,GAAvC,mBAAO9E,EAAP,KAAgB8H,EAAhB,KACA,EAA8BhD,mBAAS,GAAvC,mBAAO7E,EAAP,KAAgB8H,EAAhB,KAEAC,qBAAU,WACR,GAAInH,EAAM,CACRkE,EAASlE,EAAKwB,OACduF,EAAe/G,EAAKyB,aAAe,IAEnC,IAAM2F,EAAepH,EAAKuB,UAAY,EACtCyF,EAAS/H,KAAKC,MAAMkI,EAAe,OACnCH,EAAWhI,KAAKC,MAAOkI,EAAe,KAAQ,KAC9CF,EAAWE,EAAe,SAE1BlD,EAAS,IACT6C,EAAe,IACfC,EAAS,GACTC,EAAW,GACXC,EAAW,KAEZ,CAAClH,IAEJ,IAqBMqH,EAAc,WAClBP,KAGF,OAAKnE,GAAW3C,EAKd,yBAAKc,UAAU,SACb,yBAAKA,UAAU,mCAAf,IACE,mJACA,0BAAMkE,SAjCS,SAACsC,GAEpB,GADAA,EAAMrC,iBACDjF,EAAL,CAEA,IAAMuH,EAAW/F,EAAM0D,OACjBsC,EAAiB/F,EAAYyD,OAC7BkC,EAA4C,MAA5BK,SAASzI,EAAO,KAAO,GACO,IAA9ByI,SAAStI,EAAS,KAAO,IACzBsI,SAASrI,EAAS,KAAO,GAIzCsI,EAAYN,EAAe,GAAMpH,EAAK2H,WAExCJ,IAEFV,EAAS7G,EAAKY,GAAI2G,EAAUH,EAAcI,EAAgBE,GAC1DZ,QAiBI,6BACE,2BAAOc,QAAQ,aAAf,qDACA,2BACE5G,KAAK,OACLJ,GAAG,YACHuD,MAAO3C,EACPP,SAAU,SAAC+B,GAAD,OAAOkB,EAASlB,EAAEoB,OAAOD,QACnC0D,UAAQ,KAGZ,6BACE,2BAAOD,QAAQ,mBAAf,qDACA,8BACEhH,GAAG,kBACHuD,MAAO1C,EACPR,SAAU,SAAC+B,GAAD,OAAO+D,EAAe/D,EAAEoB,OAAOD,QACzC2D,KAAK,OAGT,yBAAKhH,UAAU,eACb,6BACE,2BAAO8G,QAAQ,aAAf,6BACA,2BACE5G,KAAK,SACLJ,GAAG,YACHuD,MAAOnF,EACPiC,SAAU,SAAC+B,GAAD,OAAOgE,EAAShE,EAAEoB,OAAOD,QACnC4D,IAAI,OAGR,6BACE,2BAAOH,QAAQ,eAAf,yCACA,2BACE5G,KAAK,SACLJ,GAAG,cACHuD,MAAOhF,EACP8B,SAAU,SAAC+B,GAAD,OAAOiE,EAAWjE,EAAEoB,OAAOD,QACrC4D,IAAI,IACJC,IAAI,QAGR,6BACE,2BAAOJ,QAAQ,eAAf,+CACA,2BACE5G,KAAK,SACLJ,GAAG,cACHuD,MAAO/E,EACP6B,SAAU,SAAC+B,GAAD,OAAOkE,EAAWlE,EAAEoB,OAAOD,QACrC4D,IAAI,IACJC,IAAI,SAIV,yBAAKlH,UAAU,iBACb,4BAAQE,KAAK,UAAb,0DACA,4BAAQA,KAAK,SAASG,QAASkG,GAA/B,0CAGJ,4BAAQvG,UAAU,eAAeK,QAASkG,GAA1C,UAlEG,M,eCzCL/H,EAAS,CACb2I,QAAS,CACPrI,QAAQ,EACRsI,WAAY,OACZxI,WAAY,UAEdgE,OAAQ,CACNC,OAAQ,UACRvC,MAAO,UACPwC,WAAY,cACZJ,OAAQ,YACR2E,aAAc,MACd1E,OAAQ,UAEV2E,QAAS,CACPF,WAAY,QACZ9G,MAAO,WAETiH,QAAS,CACPzE,WAAY,gBAKV0E,EAAWvC,SAASvE,MACpB+G,EAAW,CAAC,WAAO,YACrBC,EAAa,EAocFC,MAlcf,WACE,MAA0BnK,IAAM2F,SAAS,IAAzC,mBAAO9B,EAAP,KAAcuG,EAAd,KAIA,EAAgCpK,IAAM2F,SAAS,IAA/C,mBAAO3B,EAAP,KAAiBqG,EAAjB,KAIA,EAAgCrK,IAAM2F,SAAS,IAA/C,mBAAO2E,EAAP,KAAiBC,EAAjB,KAKA,EAAkCvK,IAAM2F,SAAS,GAAjD,mBAAO6E,EAAP,KAAkBC,EAAlB,KACA,EAAkCzK,IAAM2F,SAAS,GAAjD,mBAAOhE,EAAP,KAAkB+I,EAAlB,KACA,EAA0B1K,IAAM2F,SAAS,GAAzC,mBAAOgF,EAAP,KAAcC,EAAd,KACA,EAAsC5K,IAAM2F,UAAS,GAArD,mBAAOa,EAAP,KAAoBC,EAApB,KACA,EAAmDzG,IAAM2F,UAAS,GAAlE,mBAAOkF,EAAP,KAAwBC,EAAxB,KACA,EAAoC9K,IAAM2F,SAAS,MAAnD,mBAAOoF,EAAP,KAAmBC,EAAnB,KAEA,EAAkDhL,IAAM2F,SAAS,GAAjE,oBAAOsF,GAAP,MAA0BC,GAA1B,MACA,GAAsDlL,IAAM2F,SAAS,GAArE,qBAAOwF,GAAP,MAA4BC,GAA5B,MACA,GAAkDpL,IAAM2F,SAAS,MAAjE,qBAAO0F,GAAP,MAA0BC,GAA1B,MACA,GAA4DtL,IAAM2F,SAAS4F,aAAaC,YAAxF,qBAAOC,GAAP,MAA+BC,GAA/B,MAGA1L,IAAM6I,WAAU,WAEkB,YAA5B0C,aAAaC,YACfD,aAAaI,oBAAoBC,MAAK,SAAAJ,GACpCE,GAA0BF,QAG7B,IAEHxL,IAAM6I,WAAU,WACd,IAAIgD,EAAeC,aAAaC,QAAQ,SACxCF,GAAgBzB,EAAS4B,KAAKC,MAAMJ,IAEpC,IAAIK,EAAkBJ,aAAaC,QAAQ,YAC3CG,GAAmB7B,EAAY2B,KAAKC,MAAMC,IAE1C,IAAIC,EAAmBL,aAAaC,QAAQ,aAC5CI,GAAoB1B,EAAa0B,KAEhC,IAEHnM,IAAM6I,WAAU,WACdiD,aAAaM,QAAQ,QAASJ,KAAKK,UAAUxI,MAC5C,CAACA,IAEJ7D,IAAM6I,WAAU,WACdiD,aAAaM,QAAQ,WAAYJ,KAAKK,UAAUrI,MAC/C,CAACA,IAEJhE,IAAM6I,WAAU,WACdiD,aAAaM,QAAQ,YAAa5B,KACjC,CAACA,IAEJxK,IAAM6I,WAAU,WAEd,GADAhC,QAAQC,IAAInF,GACPA,EAIE,CACL2K,cAAc3B,GACd4B,EAAU,oBACV,IAAIC,EAAUC,KAAKC,MACnB9B,EAAS+B,aAAY,WACnBlF,SAASvE,MAAQ+G,EAASC,GAAc,IAAMF,EAC9CE,GAAcA,EAAW,GAAG,EAC5BE,EACEvG,EAAMC,KAAI,SAAApC,GACR,GAAIA,EAAKY,KAAOX,EAAW,CACzBD,EAAKkL,aAAelL,EAAKkL,WAA2B,IAAdlL,EAAKuB,UAC3C,IAAI4J,EAAOJ,KAAKC,MAAQF,EACxB9K,EAAKkL,YAAcC,EACnBL,EAAUC,KAAKC,MACfhL,EAAKuB,SAAWtC,KAAKyC,MAAM1B,EAAKkL,WAAa,KAC7ClL,EAAKuG,cACDvG,EAAKuB,SAAW,KAAO,IACzBvB,EAAK2B,OAAS3B,EAAK2H,YAErBoB,GAAa,SAAAqC,GAAM,OAAI3D,SAAS2D,EAAQ,IAAM,KAEhD,OAAOpL,QAGV,WA3BH4K,cAAc3B,GACd4B,EAAU,iBACV9E,SAASvE,MAAQ8G,IA4BlB,CAACrI,IAEJ3B,IAAM6I,WAAU,YAsQhB,WACE,IAAIoC,EAAoB,EACpBE,EAAsB,EAC1BtE,QAAQC,IAAIwD,GAEZzG,EAAMC,KAAI,SAAApC,IAC2B,IAA/B4I,EAASyC,QAAQrL,EAAKY,MACxB2I,GAAqBvJ,EAAKuB,SAC1BkI,GAAuBzJ,EAAK2B,UAGhC6H,GAAqBD,GACrBG,GAAuBD,GAjRvB6B,KAEC,CAAC1C,IAGJ,IAAMvI,GAAa/B,IAAMiN,aAAY,SAAC3K,GACpCuE,QAAQC,IAAI,cAAgBxE,GAE5B8H,EACEvG,EAAMC,KAAI,SAAApC,GAOR,OANIA,EAAKY,KAAOA,IACdZ,EAAKU,WAAaV,EAAKU,UACnBV,EAAKU,WAAcE,IAAOX,GAC5B+I,EAAa,IAGVhJ,QAGV,CAACC,EAAW+I,EAAcN,EAAUvG,IAIjC7B,GAAWhC,IAAMiN,aAAY,SAAC3K,GAClCuE,QAAQC,IAAI,YAAcxE,GAE1B,IAHyC,eAGhCyB,GACP,IAAMrC,EAAOmC,EAAME,GACnB,GAAKrC,EAAKY,KAAOA,IAAQZ,EAAKU,UAAW,CACvC,IAAMX,EAAUuC,EAASC,MAAK,SAAAiJ,GAAC,OAAIA,EAAE5K,KAAOZ,EAAKwC,aAE3CiJ,EAAoB1L,EAAO,UAAMA,EAAQyB,MAAd,aAAwBxB,EAAKwB,OAAUxB,EAAKwB,MAE7E,GAAIZ,IAAOX,GAIT,GAFA+I,EAAa,GAEkB,YAA3Be,GACF,IAEE,IAAIF,aAAJ,UAtKO,eAsKP,gFAAiD4B,GAAqB,CACpEC,KAAK,2GACLC,QAAQ,IAEV,MAAOC,GACPzG,QAAQyG,MAAM,4NAA8CA,SAQhE,GAHAhC,GAAqBhJ,GACrBoI,EAAapI,GAEkB,YAA3BmJ,GACF,IAEE,IAAIF,aAAJ,UAvLO,iCAuLP,8DAA8C4B,GAAqB,CACjEC,KAAK,yFACLC,QAAQ,IAEV,MAAOC,GACPzG,QAAQyG,MAAM,0MAA2CA,GAI/D,gBAvCKvJ,EAAI,EAAGA,EAAIF,EAAM0J,OAAQxJ,IAAK,gBAA9BA,GAuCL,SAIH,CAACpC,EAAWkC,EAAOG,EAAUyH,GAAwBf,EAAcY,KAGhEkC,GAAexN,IAAMiN,aAAY,WACX,OAAtB5B,GAKoBxH,EAAMI,MAAK,SAAAvC,GAAI,OAAIA,EAAKY,KAAO+I,OAQvDxE,QAAQC,IAAR,kKAA8DuE,KAC9DrJ,GAASqJ,KANPxE,QAAQC,IAAR,uCAAuCuE,GAAvC,uDAPAxE,QAAQC,IAAI,yGAcb,CAACuE,GAAmBxH,EAAO7B,KA+E9B,SAASwC,GAAclC,GACrBuE,QAAQC,IAAI,iBAAmBxE,GAC/B+H,EAAYrG,EAASyJ,QAAO,SAAAhM,GAAO,OAAIA,EAAQa,KAAOA,MACtD8H,EAASvG,EAAM4J,QAAO,SAAA/L,GAAI,OAAIA,EAAKwC,YAAc5B,MACjDwJ,aAAaM,QAAQ,WAAYJ,KAAKK,UAAUrI,IAChD8H,aAAaM,QAAQ,QAASJ,KAAKK,UAAUxI,IAlF/C7D,IAAM6I,WAAU,WACd,IAAM6E,EAAuB,SAAC1E,GACK,YAA7BA,EAAM2E,OAAOC,KAAKC,QAEpBL,MAMJ,OAFA5I,OAAOkJ,iBAAiB,eAAgBJ,GAEjC,WACL9I,OAAOmJ,oBAAoB,eAAgBL,MAG5C,CAACF,KA4KJ,IAAIQ,GAASnK,EAAM4J,QAAQ,SAAA/L,GAAI,OAAKA,EAAKU,aACrCA,GAAYyB,EAAM4J,QAAQ,SAAA/L,GAAI,OAAIA,EAAKU,aAEvC6L,GAAc,CAChBhM,YAvGF,SAAqBK,EAAIoC,GACnBA,EAAEoB,OAAOoI,QACX3D,EAAYD,EAAS6D,OAAO,CAAC7L,KAE7BiI,EAAYD,EAASmD,QAAO,SAAAW,GAAI,OAAIA,IAAS9L,OAoG/CR,WA9KF,SAAoBQ,GAClBuE,QAAQC,IAAI,cAAgBxE,GAC5B8H,EAASvG,EAAM4J,QAAO,SAAA/L,GAAI,OAAIA,EAAKY,KAAOA,OA6K1CP,cACAyD,QA3KF,SAAiBtC,EAAOgB,GACtB2C,QAAQC,IAAI,WAAa5D,GACzBgB,EAAYiF,SAASjF,EAAW,IAChC,IAAIzC,EAAUuC,EAASC,MAAK,SAACxC,GAAD,OAAaA,EAAQa,KAAO4B,KACxDkG,EAASvG,EAAMsK,OAAO,CAAC,CACrB7L,GAAImK,KAAKC,MACTxI,YACAhB,QACAd,WAAW,EACXa,SAAU,EACV2J,WAAY,EACZvJ,MAAO,EACPgG,WAAYF,SAAS1H,EAAQgD,OAAQ,IAAI,GACzCwD,YAAa,OA+JfM,SA1JF,SAAkBjG,EAAIY,EAAOD,EAAUE,EAAaE,GAClDwD,QAAQC,IAAI,YAAcxE,EAAK,WAAaY,EAAQ,cAAgBD,EAAW,iBAAmBE,EAAc,WAAaE,GAC7H+G,EACEvG,EAAMC,KAAI,SAAApC,GACR,OAAIA,EAAKY,KAAOA,EACP,2BAAKZ,GAAZ,IAAkBwB,MAAOA,EAAOD,SAAUkG,SAASlG,EAAU,IAAK2J,WAAqC,IAAzBzD,SAASlG,EAAU,IAAYE,YAAaA,EAAaE,MAAOA,IAEzI3B,OAoJXwF,WA/HF,SAAoBhE,EAAOuB,GACzBoC,QAAQC,IAAI,cAAgB5D,GAC5BmH,EAAYrG,EAASmK,OAAO,CAAC,CAC3B7L,GAAImK,KAAKC,MACTxJ,QACAuB,OAAQ0E,SAAS1E,EAAQ,SA2H3BzC,YACAyE,iBACAjC,iBACA6J,cAnJoB,SAAC3M,GACrBsJ,EAActJ,GACdoJ,GAAwB,IAkJxBtC,eA/IqB,WACrBwC,EAAc,MACdF,GAAwB,IA8IxB5I,mBA1IyB,SAACmC,GAAyB,IAAjB3C,EAAgB,uDAAT,KACzCsJ,EAActJ,GACdoJ,EAAwBzG,KA2I1B,OACE,kBAAC,EAAQiK,SAAT,CAAkBzI,MAAOoI,IACvB,yBAAKzL,UAAU,OACb,4BAAQA,UAAU,cAChB,6BACE,yBAAKD,MAAO,CAACjB,QAAQ,IACnB,yBAAKiN,IAAI,kBAAkBC,IAAI,YADjC,kBAEaC,EAAYC,SAEzB,yBAAKnM,MAAOvB,EAAO2I,SACjB,4BACEpH,MAAOvB,EAAOoE,OACdvC,QAAS,kBAlFvB,WACE,GAAI+B,OAAOC,QAAQ,gUAAkE,CACnF6F,EAAa,GACb,IAAIiE,EAAWlH,SAASmH,gBAAgB,+BAAgC,SACxED,EAASjM,KAAO,OAChBiM,EAASE,OAAS,mBAClBF,EAASb,iBAAiB,UAAU,WAClC,GAAIa,EAASG,OAASH,EAASG,MAAM,GAAI,CACvC,IAAIC,EAAOJ,EAASG,MAAM,GACtBE,EAAS,IAAIC,WACjBD,EAAOlB,iBAAiB,QAAQ,SAAUpJ,GACxC,IACE,IAAIwK,EAASlD,KAAKC,MAAMvH,EAAEoB,OAAOoJ,QACjCpD,aAAaM,QAAQ,YAAa8C,EAAO1E,WAEzC,IAAI3G,EAAQmI,KAAKC,MAAMiD,EAAOrL,OAAOC,KAAI,SAAApC,GAIvC,OAHKA,EAAKkL,aACRlL,EAAKkL,WAA6B,IAAhBlL,EAAKuB,UAElBvB,KAEToK,aAAaM,QAAQ,QAASJ,KAAKK,UAAUxI,IAC7CiI,aAAaM,QAAQ,WAAY8C,EAAOlL,UACxCY,OAAOuK,SAASC,SAChB,MAAO1K,GACPmC,QAAQyG,MAAM5I,GACdE,OAAOmC,MAAM,+IAGjBiI,EAAOK,WAAWN,GAEpBJ,EAAW,QAEbA,EAASW,cAAc,IAAIC,WAAW,WAiDZC,IAChB9M,KAAK,UAHP,wCAIA,4BACEH,MAAK,2BAAMvB,EAAOoE,QAAWpE,EAAO8I,SACpCjH,QAAS,kBApHvB,WACE,IAAI4M,EAAOzD,KAAKK,UAAU,CACxB7B,UAAWsB,aAAaC,QAAQ,aAChClI,MAAOiI,aAAaC,QAAQ,SAC5B/H,SAAU8H,aAAaC,QAAQ,cAG7B2D,EAAO,IAAIjD,KACXkD,EAAO,WAQX,GANAA,GAAI,UAAOD,EAAKE,UAAUC,WAAWvP,SAAS,EAAG,KAA7C,aAAsDoP,EAAKI,WAAW,GAAGD,WAAWvP,SAAS,EAAG,KAAhG,YAAwGoP,EAAKK,eAEjHJ,GAAI,WAAQD,EAAKM,WAAWH,WAAWvP,SAAS,EAAG,KAA/C,YAAuDoP,EAAKO,aAAaJ,WAAWvP,SAAS,EAAG,KAAhG,YAAwGoP,EAAKQ,aAAaL,WAAWvP,SAAS,EAAG,MAErJqP,GAAQ,QAE2B,mBAAxBQ,UAAUC,WACnB,OAAOD,UAAUC,WAAWX,EAAME,GAGpC,IAAIU,EAAQ5I,SAASmH,gBAAgB,+BAAgC,KACjE0B,EAAUC,IAAIC,gBAAgB,IAAIC,KAAK,CAAChB,GAAO,CAAC/M,KAAM,sBAE1D2N,EAAMtI,KAAOuI,EACbD,EAAMK,SAAWf,EACjBU,EAAMf,cAAc,IAAIC,WAAW,UACnCgB,IAAII,gBAAgBL,GACpBD,EAAQ,KAyFoBO,IAChBlO,KAAK,UAHP,iDAON,yBAAKF,UAAU,eACb,6BACGwL,GAAOT,OAAQ,kBAAC,EAAD,CAAUrK,MAAM,mDAAWW,MAAOmK,GAAQhK,SAAUA,EAAUrC,UAAWA,IAAgB,iIACzG,0EACA,kBAAC,EAAD,CAAUqC,SAAUA,IACpB,kBAACiD,EAAD,MACC7E,GAAUmL,OAAS,kBAAC,EAAD,CAAUrK,MAAM,qEAAcW,MAAOzB,GAAW4B,SAAUA,EAAUrC,UAAWA,IAAiB,qJAGxH,4BAAQa,UAAU,cAChB,yBAAKA,UAAU,aAAaK,QAAS,kBAAO4D,GAAe,KAA3D,oCACWzD,EAASwH,GADpB,SAGA,0BAAMtH,MAAM,uHAAwBV,UAAU,0BAA0BK,QAAS,kBA/IvF4H,EAAa,QACbL,EACEvG,EAAMC,KAAI,SAAApC,GAER,OADAA,EAAKuG,YAAc,EACZvG,QA4IH,kBAAC,IAAD,CAASrB,KAAM,GAAIyC,MAAM,SAASC,YAAY,OAGhD,yBAAKR,MAAK,2BAAMvB,EAAO2I,SAAb,IAAsBkH,aAAc,UAC5C,+HACsB7N,EAASiI,IAD/B,MACsDtK,KAAKyC,MAAM+H,QAKvE,kBAAC,EAAD,CACE9G,OAAQmC,EACR3C,MAAOA,EACPG,SAAUA,EACVQ,cAAeA,KAEjB,kBAAC,EAAD,CACEH,OAAQwG,EACRnJ,KAAMqJ,MCled+F,IAASC,OAAO,kBAAC,EAAD,MAAStJ,SAASuJ,eAAe,W","file":"static/js/main.e29abf04.chunk.js","sourcesContent":["import React from 'react';\n\nconst Context = React.createContext();\n\nexport default Context","export default function(timeInSeconds) {\n    const pad = (num, size) => (num + \"\").padStart(size, \"0\");\n    const hardPad = (num, size) => ('000' + num).slice(size * -1);\n    const time = parseFloat(timeInSeconds).toFixed(3);\n    const hours = Math.floor(time / 60 / 60);\n    const minutes = Math.floor(time / 60) % 60;\n    const seconds = Math.floor(time - minutes * 60);\n\n    return pad(hours, 2) + ':' + pad(minutes, 2) + ':' + hardPad(seconds, 2);\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Context from '../context';\nimport Sec2time from '../Helpers/Sec2time';\nimport { PlayCircle, PauseCircle, Check, XSquare } from 'react-feather'; // Убираем Edit3\n\nconst styles = {\n  li: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '.5rem',\n    padding: '.5rem',\n    boxShadow: '1px 1px 4px 0px rgba(0,0,0,.5)'\n  },\n};\n\nfunction TodoItem({project, todo, index, currentId}) {\n  const {removeTodo, toggleTodo, toggleGo, toggleCheck, setIsEditModalOpen} = React.useContext(Context); // Добавляем setIsEditModalOpen\n  let classes = ['todoTitle'];\n  if (todo.completed) {\n    classes.push('done');\n  }\n  if (todo.id === currentId) {\n    classes.push('go');\n  }\n  return (\n    <li style={styles.li}>\n      <span className={classes.join(' ')}>\n        <input type=\"checkbox\" onChange={toggleCheck.bind(null, todo.id)} />\n        <span className=\"action goAction\" onClick={toggleGo.bind(null, todo.id)}>\n          {(todo.id === currentId) ? <PauseCircle size={16} color=\"red\" strokeWidth=\"2\" /> : <PlayCircle size={16} color=\"blue\" strokeWidth=\"2\" /> }\n        </span>\n        <span className=\"action doneAction\" onClick={toggleTodo.bind(null, todo.id)}>\n          <Check size={16} color=\"green\" strokeWidth=\"2\" />\n        </span>\n        <span className=\"text duration\">\n        {Sec2time(todo.duration)}\n        </span>\n        <span \n          className=\"text title action editAction\" \n          onClick={() => setIsEditModalOpen(true, todo)} \n          title={todo.description ? todo.description : \"Редактировать задачу\"}\n        >\n          <strong>{project.title}:</strong>&nbsp;{todo.title}\n        </span>\n        <span className=\"text money\">\n        {Math.round(todo.money)}\n        </span>\n      </span>\n      {/* Можно добавить отдельную кнопку для редактирования, если клик по названию нежелателен */}\n      {/* <button className=\"action editIconAction\" onClick={() => setIsEditModalOpen(true, todo)} title=\"Редактировать\">\n        <Edit3 size={16} color=\"blue\" strokeWidth=\"2\" />\n      </button> */}\n      <button className=\"action removeAction\" onClick={removeTodo.bind(null, todo.id)}>\n        <XSquare size={16} color=\"red\" strokeWidth=\"2\" />\n      </button>\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  project: PropTypes.object.isRequired,\n  todo: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired,\n  currentId: PropTypes.number.isRequired\n}\n\nexport default TodoItem\n","import React from 'react';\nimport Todoitem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n  ul: {\n    listStyle: 'none',\n    textAlign: 'left',\n    margin: 0,\n    padding: 0,\n    width: '100%'\n  }\n};\n\nfunction  TodoList (props) {\n  // props.todos.sort(function(a, b) {\n  //   if (a.completed > b.completed) {\n  //     return 1;\n  //   }\n  //   if (a.completed < b.completed) {\n  //     return -1;\n  //   }\n  //   // a должно быть равным b\n  //   return 0;\n  // });\n  return (\n    <div>\n    <h3>{props.title}</h3>\n    <ul style={styles.ul}>\n        {props.todos.map((todo, i) => {\n          let project = props.projects.find((project) => project.id === todo.projectId);\n          return <Todoitem currentId={props.currentId} project={project} todo={todo} key={todo.id} index={i} />;\n        })}\n    </ul>\n    </div>\n  );\n}\n\nTodoList.propTypes = {\n  title: PropTypes.string.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  projects: PropTypes.arrayOf(PropTypes.object).isRequired,\n  currentId: PropTypes.number.isRequired\n}\n\nexport default TodoList","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ProjectSelectModal.css';\nimport Context from '../context';\nimport { Trash2 } from 'react-feather';\n\nfunction ProjectSelectModal({ isOpen, onClose, projects, onSelect }) {\n  const {removeProject} = React.useContext(Context);\n  if (!isOpen) return null;\n  \n  return (\n    <div className=\"modal\">\n      <div className=\"modal-body\">\n        <h2>Выберите проект</h2>\n        <ul className=\"project-list\">\n          {projects.map(project => (\n            <li\n              key={project.id}\n              className=\"project-item\"\n              onClick={() => {\n                onSelect(project);\n                onClose();\n              }}\n              >\n                {project.title}: {project.tariff}\n                <button\n                  className=\"project-delete-button\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    if (window.confirm(`Вы уверены, что хотите удалить проект \"${project.title}\" и все связанные с ним задачи?`)) {\n                      removeProject(project.id);\n                      onClose();\n                    }\n                  }}\n                >\n                  <Trash2 size={20} color=\"red\" strokeWidth=\"2\" />\n                </button>\n            </li>\n          ))}\n        </ul>\n        <button onClick={onClose}>&times;</button>\n      </div>\n    </div>\n  );\n}\n\nProjectSelectModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  projects: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n\nexport default ProjectSelectModal;\n","import React from 'react';\n//import PropTypes from 'prop-types';\nimport Context from '../context';\nimport ProjectSelectModal from './ProjectSelectModal';\n\nconst styles = {\n  form: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '.5rem',\n    padding: '.5rem',\n    boxShadow: '1px 1px 4px 0px rgba(0,0,0,.5)'\n  },\n  input: {\n    paddingLeft: '1rem',\n    flexGrow: 1,\n    border: 0,\n    height: '1.5rem'\n  },\n  button: {\n    cursor: 'pointer',\n    background: '#00FFA9',\n    color: '#fff',\n    border: 0,\n    height: '1.5rem'\n  }\n}\n\nfunction useTitleInput(defaultTitle = '') {\n  const [title, setTitle] = React.useState(defaultTitle);\n\n  return {\n    bind: {\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    },\n    clear: () => setTitle(''),\n    title: () => title\n  }\n}\n\nfunction useProjectInput(defaultProjectId = '') {\n  const [projectId, setProjectId] = React.useState(defaultProjectId);\n  const [selectedProject, setSelectedProject] = React.useState(null);\n\n  return {\n    selectProject: (project) => {\n      setProjectId(project.id);\n      setSelectedProject(project);\n    },\n    clear: () => {\n      setProjectId('');\n      setSelectedProject(null);\n    },\n    projectId,\n    selectedProject\n  }\n}\n\nfunction TodoForm(props) {\n  const {addTodo} = React.useContext(Context);\n  const titleInput = useTitleInput('');\n  const projectInput = useProjectInput('');\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\n\n  function submitTodo (e) {\n    e.preventDefault();\n    if (titleInput.title().trim() && projectInput.projectId) {\n      console.log('projectId: ' + projectInput.projectId);\n      addTodo(titleInput.title(), projectInput.projectId);\n      titleInput.clear();\n      projectInput.clear();\n    } else {\n      alert('Нужно заполнить название и выбрать проект');\n    }\n  }\n  return (\n    <form style={styles.form} onSubmit={submitTodo}>\n      <div>Задачу</div>\n      <input placeholder=\"Название задачи\" style={styles.input} {...titleInput.bind} />\n      <button \n        type=\"button\"\n        style={{\n          ...styles.input,\n          cursor: 'pointer',\n          background: projectInput.selectedProject ? '#fff' : '#f5f5f5'\n        }}\n        onClick={() => setIsModalOpen(true)}\n      >\n        {projectInput.selectedProject \n          ? `${projectInput.selectedProject.title}: ${projectInput.selectedProject.tariff}`\n          : 'Выберите проект...'}\n      </button>\n      <ProjectSelectModal\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        projects={props.projects}\n        onSelect={projectInput.selectProject}\n      />\n      <button style={styles.button} type=\"submit\">Создать задачу</button>\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React from 'react';\nimport Context from '../context';\n\nconst styles = {\n  form: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '.5rem',\n    padding: '.5rem',\n    boxShadow: '1px 1px 4px 0px rgba(0,0,0,.5)'\n  },\n  input: {\n    paddingLeft: '1rem',\n    flexGrow: 1,\n    border: 0,\n    height: '1.5rem'\n  },\n  button: {\n    cursor: 'pointer',\n    background: '#293685',\n    color: '#fff',\n    border: 0,\n    height: '1.5rem'\n  }\n}\n\nfunction useTitleInput(defaultTitle = '') {\n  const [title, setTitle] = React.useState(defaultTitle);\n\n  return {\n    bind: {\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    },\n    clear: () => setTitle(''),\n    title: () => title\n  }\n}\n\nfunction useTariffInput(defaultTariff = '') {\n  const [tariff, setTariff] = React.useState(defaultTariff);\n\n  return {\n    bind: {\n      value: tariff,\n      onChange: e => setTariff(e.target.value)\n    },\n    clear: () => setTariff(''),\n    tariff: () => tariff\n  }\n}\n\nexport default function ProjectForm() {\n  const {addProject} = React.useContext(Context);\n  const titleInput = useTitleInput('');\n  const tariffInput = useTariffInput('');\n\n  function submitProject (e) {\n    e.preventDefault();\n    if (titleInput.title().trim()) {\n      addProject(titleInput.title(), tariffInput.tariff());\n      titleInput.clear();\n      tariffInput.clear();\n    } else {\n      alert('Нужно заполнить название');\n    }\n  }\n  return (\n    <form style={styles.form} onSubmit={submitProject}>\n      <div>Проект</div>\n      <input placeholder=\"Название проекта\" style={styles.input} {...titleInput.bind} />\n      <input placeholder=\"Стоимость часа\" style={styles.input} {...tariffInput.bind} />\n      <button style={styles.button} type=\"submit\">Создать проект</button>\n    </form>\n  );\n}","export default function (path) {\n    let link = document.querySelector('link[rel=\"shortcut icon\"]') ||\n    document.querySelector('link[rel=\"icon\"]');\n\n    if (!link) {\n        link = document.createElement('link');\n        link.id = 'favicon';\n        link.rel = 'shortcut icon';\n        document.head.appendChild(link);\n    }\n\n    link.href = path;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Context from '../context';\nimport Sec2time from '../Helpers/Sec2time';\nimport './Modal.css';\n\nfunction Modal(props) {\n  const {setIsModalOpen} = React.useContext(Context);\n  let projects = props.projects.map((project) => {\n    let tmpDuration = props.todos.map((todo) => {\n      if (todo.projectId === project.id) {\n        return todo.tmpDuration;\n      }\n      return 0;\n    }).reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n    return {\n      id: project.id,\n      title: project.title,\n      tmpDuration\n    }\n  })\n  return (\n    <React.Fragment>\n      {props.isOpen && (<div className=\"modal\">\n        <div className=\"modal-body\">\n          <h2>По проектам</h2>\n          {\n          // eslint-disable-next-line\n          projects.map(project => {\n            if (project.tmpDuration) {\n              return (<p key={project.id}>{project.title}: ~{Sec2time(project.tmpDuration)}</p>)\n            }\n          })}\n          <button onClick={() => setIsModalOpen(false)}>&times;</button>\n        </div>\n      </div>)}\n    </React.Fragment>\n  );\n}\n\nModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  projects: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default Modal","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Context from '../context';\nimport './EditTodoModal.css'; // Используем созданные стили\n\nfunction EditTodoModal({ isOpen, todo }) {\n  const { editTodo, closeEditModal } = useContext(Context);\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    if (todo) {\n      setTitle(todo.title);\n      setDescription(todo.description || ''); // Устанавливаем описание или пустую строку\n\n      const totalSeconds = todo.duration || 0;\n      setHours(Math.floor(totalSeconds / 3600));\n      setMinutes(Math.floor((totalSeconds % 3600) / 60));\n      setSeconds(totalSeconds % 60);\n    } else {\n      setTitle('');\n      setDescription('');\n      setHours(0);\n      setMinutes(0);\n      setSeconds(0);\n    }\n  }, [todo]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (!todo) return;\n\n    const newTitle = title.trim();\n    const newDescription = description.trim();\n    const totalSeconds = (parseInt(hours, 10) || 0) * 3600 +\n                         (parseInt(minutes, 10) || 0) * 60 +\n                         (parseInt(seconds, 10) || 0);\n\n    // Рассчитываем новую стоимость\n    // todo.minuteCost содержит стоимость одной минуты\n    const newMoney = (totalSeconds / 60) * todo.minuteCost;\n\n    if (newTitle) {\n      // Передаем также newDescription и newMoney в editTodo\n      editTodo(todo.id, newTitle, totalSeconds, newDescription, newMoney);\n      closeEditModal(); // Закрываем модальное окно после сохранения\n    }\n  };\n\n  const handleClose = () => {\n    closeEditModal();\n  };\n\n  if (!isOpen || !todo) {\n    return null; // Не рендерим модальное окно, если оно не открыто или нет задачи\n  }\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-body edit-todo-modal-body\"> {/* Используем специфичный класс для тела модалки */}\n        <h2>Редактировать задачу</h2>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"todoTitle\">Название:</label>\n            <input\n              type=\"text\"\n              id=\"todoTitle\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor=\"todoDescription\">Описание:</label>\n            <textarea\n              id=\"todoDescription\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              rows=\"3\"\n            />\n          </div>\n          <div className=\"time-inputs\">\n            <div>\n              <label htmlFor=\"todoHours\">Часы:</label>\n              <input\n                type=\"number\"\n                id=\"todoHours\"\n                value={hours}\n                onChange={(e) => setHours(e.target.value)}\n                min=\"0\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"todoMinutes\">Минуты:</label>\n              <input\n                type=\"number\"\n                id=\"todoMinutes\"\n                value={minutes}\n                onChange={(e) => setMinutes(e.target.value)}\n                min=\"0\"\n                max=\"59\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"todoSeconds\">Секунды:</label>\n              <input\n                type=\"number\"\n                id=\"todoSeconds\"\n                value={seconds}\n                onChange={(e) => setSeconds(e.target.value)}\n                min=\"0\"\n                max=\"59\"\n              />\n            </div>\n          </div>\n          <div className=\"modal-buttons\">\n            <button type=\"submit\">Сохранить</button>\n            <button type=\"button\" onClick={handleClose}>Отмена</button>\n          </div>\n        </form>\n        <button className=\"close-button\" onClick={handleClose}>&times;</button>\n      </div>\n    </div>\n  );\n}\n\nEditTodoModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  todo: PropTypes.object, // Может быть null, если модальное окно закрыто\n};\n\nexport default EditTodoModal;\n","import React from 'react';\nimport './App.scss';\nimport TodoList from './Todo/TodoList';\nimport TodoForm from './Todo/TodoForm';\nimport ProjectForm from './Project/ProjectForm';\nimport Context from './context';\nimport Sec2time from './Helpers/Sec2time';\nimport ChangeFav from './Helpers/ChangeFav';\nimport Modal from './Modal/Modal';\nimport EditTodoModal from './Todo/EditTodoModal'; // Импорт нового модального окна\nimport packageJson from '../package.json';\nimport { XCircle } from 'react-feather';\n\n// Иконки для уведомлений (UTF-8 эмодзи)\nconst ICON_RUNNING = '👨‍💻'; // Человек за компьютером\nconst ICON_STOPPED = '🧘'; // Человек отдыхает (медитирует)\n\nconst styles = {\n  buttons: {\n    padding:0,\n    marginLeft: \"auto\",\n    alignItems: \"center\"\n  },\n  button: {\n    cursor: 'pointer',\n    color: '#e91615',\n    background: 'transparent',\n    border: '2px solid',\n    borderRadius: '3px',\n    height: '1.5rem'\n  },\n  button2: {\n    marginLeft: \".5rem\",\n    color: '#40a040'\n  },\n  button3: {\n    background: 'transparent',\n    // border: '1px solid',\n  }\n}\n\nconst appTitle = document.title \nconst appSigns = [\"[▶]\", \"[◀]\"]\nlet appSignKey = 0\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    // {id: 1, projectId: 1, title: 'Купить хлеб', completed: true, duration: 0, money: 0, minuteCost: 0, tmpDuration: 0},\n  ]);\n\n  const [projects, setProjects] = React.useState([\n    // {id: 1, title: 'Проект', tariff: 800},\n  ]);\n\n  const [selected, setSelected] = React.useState([\n    // 1601760513846,\n  ]);\n\n\n  const [totalTime, setTotalTime] = React.useState(0);\n  const [currentId, setCurrentId] = React.useState(0);\n  const [timer, setTimer] = React.useState(0);\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\n  const [isEditModalOpen, setIsEditModalOpenState] = React.useState(false); // Состояние для модального окна редактирования\n  const [todoToEdit, setTodoToEdit] = React.useState(null); // Состояние для задачи, которую редактируем\n\n  const [selectedTotalTime, setSelectedTotalTime] = React.useState(0);\n  const [selectedTotalAmount, setSelectedTotalAmount] = React.useState(0);\n  const [lastStartedTodoId, setLastStartedTodoId] = React.useState(null); // ID последнего ЗАПУЩЕННОГО Todo\n  const [notificationPermission, setNotificationPermission] = React.useState(Notification.permission); // Состояние для разрешения уведомлений\n\n  // Запрос разрешения на уведомления при загрузке\n  React.useEffect(() => {\n    // Запрашиваем разрешение только если оно еще не предоставлено и не отклонено\n    if (Notification.permission === 'default') {\n      Notification.requestPermission().then(permission => {\n        setNotificationPermission(permission); // Обновляем состояние после ответа пользователя\n      });\n    }\n  }, []); // Пустой массив зависимостей, чтобы выполнилось один раз при монтировании\n\n  React.useEffect(() => {\n    let storageTodos = localStorage.getItem('todos');\n    storageTodos && setTodos(JSON.parse(storageTodos));\n\n    let storageProjects = localStorage.getItem('projects');\n    storageProjects && setProjects(JSON.parse(storageProjects));\n\n    let storageTotalTime = localStorage.getItem('totalTime');\n    storageTotalTime && setTotalTime(storageTotalTime);\n  \n  }, []);\n\n  React.useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n  }, [todos]);\n\n  React.useEffect(() => {\n    localStorage.setItem('projects', JSON.stringify(projects))\n  }, [projects]);\n\n  React.useEffect(() => {\n    localStorage.setItem('totalTime', totalTime)\n  }, [totalTime]);\n\n  React.useEffect(() => {\n    console.log(currentId);\n    if (!currentId) {\n      clearInterval(timer);\n      ChangeFav('./favicon.ico');\n      document.title = appTitle;\n    } else {\n      clearInterval(timer);\n      ChangeFav('./favicon-go.ico');\n      let startAt = Date.now();\n      setTimer(setInterval(() => {\n        document.title = appSigns[appSignKey] + \" \" + appTitle;\n        appSignKey = (appSignKey+1)%2\n        setTodos(\n          todos.map(todo => {\n            if (todo.id === currentId) {\n              todo.durationMs || (todo.durationMs = todo.duration*1000);\n              let diff = Date.now() - startAt;\n              todo.durationMs += diff;\n              startAt = Date.now();\n              todo.duration = Math.round(todo.durationMs / 1000);\n              todo.tmpDuration++;\n              if (todo.duration % 60 === 0) {\n                todo.money += todo.minuteCost;\n              }\n              setTotalTime(prevTT => parseInt(prevTT, 10) + 1);\n            }\n            return todo;\n          })\n        );\n      }, 1000));\n    }\n    // eslint-disable-next-line\n  }, [currentId]);\n\n  React.useEffect(() => {\n    calcSelectedTotals()\n    // eslint-disable-next-line\n  }, [selected]);\n\n  // Определение toggleTodo\n  const toggleTodo = React.useCallback((id) => {\n    console.log('toggleTodo ' + id);\n    // setLastToggledTodoId(id); // Больше не запоминаем ID здесь\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n          if (todo.completed && (id === currentId)) {\n            setCurrentId(0);\n          }\n        }\n        return todo;\n      })\n    );\n  }, [currentId, setCurrentId, setTodos, todos]); // Удалена зависимость setLastToggledTodoId\n\n  // Оборачиваем toggleGo в useCallback и добавляем логику сохранения ID\n  // Перемещено ПЕРЕД toggleLastGo\n  const toggleGo = React.useCallback((id) => {\n    console.log('toggleGo ' + id);\n\n    for (let i = 0; i < todos.length; i++) {\n      const todo = todos[i]; // Получаем текущий todo\n      if ((todo.id === id) && !todo.completed) {\n        const project = projects.find(p => p.id === todo.projectId); // Находим проект\n        // Формируем заголовок уведомления. Если проект не найден (маловероятно, но возможно), используем только название задачи\n        const notificationTitle = project ? `${project.title}: ${todo.title}` : todo.title;\n\n        if (id === currentId) {\n          // --- Остановка таймера ---\n          setCurrentId(0);\n          // Показываем уведомление, если разрешение получено\n          if (notificationPermission === 'granted') {\n            try {\n              // Используем эмодзи в тексте уведомления, т.к. `icon` может не поддерживаться или плохо отображаться везде\n              new Notification(`${ICON_STOPPED} ОСТАНОВЛЕНО: ${notificationTitle}`, {\n                body: `Задача остановлена.`,\n                silent: true // Без звука\n              });\n            } catch (error) {\n              console.error(\"Ошибка при показе уведомления (остановка):\", error);\n            }\n          }\n        } else {\n          // --- Запуск таймера ---\n          setLastStartedTodoId(id);\n          setCurrentId(id);\n          // Показываем уведомление, если разрешение получено\n          if (notificationPermission === 'granted') {\n            try {\n              // Используем эмодзи в тексте уведомления\n              new Notification(`${ICON_RUNNING} ЗАПУЩЕНО: ${notificationTitle}`, {\n                body: `Задача запущена.`,\n                silent: true // Без звука\n              });\n            } catch (error) {\n              console.error(\"Ошибка при показе уведомления (запуск):\", error);\n            }\n          }\n        }\n        break; // Выходим из цикла, так как нашли и обработали нужную задачу\n      }\n    }\n    // Обновляем зависимости: добавляем projects и notificationPermission\n  }, [currentId, todos, projects, notificationPermission, setCurrentId, setLastStartedTodoId]);\n\n  // Новая функция для переключения последнего ЗАПУЩЕННОГО Todo\n  const toggleLastGo = React.useCallback(() => {\n    if (lastStartedTodoId === null) {\n      console.log('toggleLastGo: lastStartedTodoId не определен');\n      return; // Ничего не делаем, если ID не запомнен\n    }\n\n    const lastStartedTodo = todos.find(todo => todo.id === lastStartedTodoId);\n\n    if (!lastStartedTodo) {\n      console.log(`toggleLastGo: Todo с ID ${lastStartedTodoId} не найден`);\n      return; // Ничего не делаем, если Todo не найден\n    }\n\n    // Проверка на completed не нужна, т.к. toggleGo ее выполняет\n    console.log(`toggleLastGo: Переключаем таймер для Todo с ID ${lastStartedTodoId}`);\n    toggleGo(lastStartedTodoId); // Вызываем toggleGo для последнего запущенного Todo\n  }, [lastStartedTodoId, todos, toggleGo]); // Обновлены зависимости\n\n  React.useEffect(() => {\n    const handleExtensionEvent = (event) => {\n      if (event.detail.data.hotkey === \"hotkey1\") {\n        // console.log('Хоткей получен!');\n        toggleLastGo(); // Вызываем toggleLastGo\n      }\n    };\n\n    window.addEventListener('globalHotkey', handleExtensionEvent);\n    \n    return () => {\n      window.removeEventListener('globalHotkey', handleExtensionEvent);\n    };\n    // Удален дублирующийся блок window.addEventListener/removeEventListener\n  }, [toggleLastGo]); // Обновлена зависимость\n\n\n  function removeTodo(id) {\n    console.log('removeTodo ' + id);\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  function addTodo(title, projectId) {\n    console.log('addTodo ' + title);\n    projectId = parseInt(projectId, 10);\n    let project = projects.find((project) => project.id === projectId);\n    setTodos(todos.concat([{\n      id: Date.now(),\n      projectId,\n      title,\n      completed: false,\n      duration: 0,\n      durationMs: 0,\n      money: 0,\n      minuteCost: parseInt(project.tariff, 10)/60,\n      tmpDuration: 0\n    }]));\n  }\n\n  // Обновленная функция editTodo\n  function editTodo(id, title, duration, description, money) { // Добавляем description и money\n    console.log('editTodo ' + id + ' title: ' + title + ' duration: ' + duration + ' description: ' + description + ' money: ' + money);\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          return { ...todo, title: title, duration: parseInt(duration, 10), durationMs: parseInt(duration, 10) * 1000, description: description, money: money }; // Сохраняем description и money\n        }\n        return todo;\n      })\n    );\n  }\n\n  const openEditModal = (todo) => {\n    setTodoToEdit(todo);\n    setIsEditModalOpenState(true);\n  };\n\n  const closeEditModal = () => {\n    setTodoToEdit(null);\n    setIsEditModalOpenState(false);\n  };\n  \n  // Передаем setIsEditModalOpen как обертку для setIsEditModalOpenState и setTodoToEdit\n  const setIsEditModalOpen = (isOpen, todo = null) => {\n    setTodoToEdit(todo);\n    setIsEditModalOpenState(isOpen);\n  };\n\n  function addProject(title, tariff) {\n    console.log('addProject ' + title);\n    setProjects(projects.concat([{\n      id: Date.now(),\n      title,\n      tariff: parseInt(tariff, 10)\n    }]));\n  }\n\n  function removeProject(id) {\n    console.log('removeProject ' + id);\n    setProjects(projects.filter(project => project.id !== id));\n    setTodos(todos.filter(todo => todo.projectId !== id));\n    localStorage.setItem('projects', JSON.stringify(projects));\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }\n\n  // Определение toggleGo перемещено выше\n\n  function toggleCheck(id, e) {\n    if (e.target.checked)\n      setSelected(selected.concat([id]));\n    else \n      setSelected(selected.filter(item => item !== id));\n  }\n\n  function resetTotalTime() {\n    setTotalTime(0);\n    setTodos(\n      todos.map(todo => {\n        todo.tmpDuration = 0;\n        return todo;\n      })\n    );\n  }\n\n  function exportData() {\n    let blob = JSON.stringify({\n      totalTime: localStorage.getItem('totalTime'),\n      todos: localStorage.getItem('todos'),\n      projects: localStorage.getItem('projects'),\n    })\n\n    let date = new Date()\n    let name = \"tasknik \"\n    //day\n    name += `${date.getDate().toString().padStart(2, \"0\")}-${(date.getMonth()+1).toString().padStart(2, \"0\")}-${date.getFullYear()}`\n    //time\n    name += ` ${date.getHours().toString().padStart(2, \"0\")}-${date.getMinutes().toString().padStart(2, \"0\")}-${date.getSeconds().toString().padStart(2, \"0\")}`\n    //extension\n    name += \".json\"\n\n    if (typeof navigator.msSaveBlob == \"function\") {\n      return navigator.msSaveBlob(blob, name)\n    }\n\n    let saver = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n    let blobURL = URL.createObjectURL(new Blob([blob], {type: \"application/json\"}))\n\n    saver.href = blobURL\n    saver.download = name\n    saver.dispatchEvent(new MouseEvent(\"click\"))\n    URL.revokeObjectURL(blobURL)\n    saver = null\n  }\n\n  function importData() {\n    if (window.confirm(\"Все задачи, проекты и таймеры будут перезаписаны. Продолжить?\")) {\n      setCurrentId(0)\n      let selector = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"input\")\n      selector.type = \"file\"\n      selector.accept = \"application/json\"\n      selector.addEventListener(\"change\", () => {\n        if (selector.files && selector.files[0]) {\n          let file = selector.files[0]\n          let reader = new FileReader()\n          reader.addEventListener('load', function (e) {\n            try {\n              let result = JSON.parse(e.target.result)\n              localStorage.setItem('totalTime', result.totalTime)\n              // Process todos to ensure durationMs field\n              let todos = JSON.parse(result.todos).map(todo => {\n                if (!todo.durationMs) {\n                  todo.durationMs = todo.duration * 1000;\n                }\n                return todo;\n              });\n              localStorage.setItem('todos', JSON.stringify(todos))\n              localStorage.setItem('projects', result.projects)\n              window.location.reload()\n            } catch (e) {\n              console.error(e);\n              window.alert(\"Не удалось прочитать файл\")\n            }\n          })\n          reader.readAsText(file)\n        }\n        selector = null\n      })\n      selector.dispatchEvent(new MouseEvent(\"click\"))\n    }\n  }\n\n  function calcSelectedTotals() {\n    let selectedTotalTime = 0\n    let selectedTotalAmount = 0\n    console.log(selected)\n    // eslint-disable-next-line\n    todos.map(todo => {\n      if (selected.indexOf(todo.id) !== -1) {\n        selectedTotalTime += todo.duration\n        selectedTotalAmount += todo.money\n      }\n    })\n    setSelectedTotalTime(selectedTotalTime)\n    setSelectedTotalAmount(selectedTotalAmount)\n  }\n\n  let active = todos.filter((todo => !todo.completed))\n  let completed = todos.filter((todo => todo.completed))\n\n  let contextData = {\n    toggleCheck, \n    removeTodo, \n    toggleTodo, \n    addTodo,\n    editTodo, // Эта функция уже обновлена выше\n    addProject,\n    toggleGo,\n    setIsModalOpen,\n    removeProject,\n    openEditModal,      // Передаем openEditModal\n    closeEditModal,     // Передаем closeEditModal\n    setIsEditModalOpen  // Добавляем setIsEditModalOpen в контекст\n  }\n\n  return (\n    <Context.Provider value={contextData}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>\n            <div style={{padding:0}}>\n              <img src=\"./time-2-32.png\" alt=\"Tasknik\"/>&nbsp;\n              Tasknik v.{packageJson.version}\n            </div>\n            <div style={styles.buttons}>\n              <button \n                style={styles.button} \n                onClick={() => (importData())}\n                type=\"button\">Импорт</button>\n              <button \n                style={{...styles.button, ...styles.button2}} \n                onClick={() => (exportData())}\n                type=\"button\">Экспорт</button>\n            </div>\n          </div>\n        </header>\n        <div className=\"App-content\">\n          <div>\n            {active.length? <TodoList title=\"Активные\" todos={active} projects={projects} currentId={currentId} /> : <p>Нет активных задач</p>}\n            <h3>Создать</h3>\n            <TodoForm projects={projects} />\n            <ProjectForm />\n            {completed.length? (<TodoList title=\"Завершенные\" todos={completed} projects={projects} currentId={currentId} />) : <p>Нет завершенных задач</p>}\n          </div>\n        </div>\n        <footer className=\"App-footer\">\n          <div className=\"totalTimer\" onClick={() => (setIsModalOpen(true))}>\n            Всего: ~{Sec2time(totalTime)} &nbsp;\n          </div>\n          <span title=\"Сбросить общий таймер\" className=\"action resetTotalAction\" onClick={() => resetTotalTime()}>\n            <XCircle size={16} color=\"orange\" strokeWidth=\"2\" />\n          </span>\n          \n          <div style={{...styles.buttons, paddingRight: \"2rem\"}}>\n            <span>\n              Итог по выбранным: {Sec2time(selectedTotalTime)} / {Math.round(selectedTotalAmount)}\n            </span>\n          </div>\n        </footer>\n      </div>\n      <Modal \n        isOpen={isModalOpen} \n        todos={todos} \n        projects={projects}\n        removeProject={removeProject}\n      />\n      <EditTodoModal\n        isOpen={isEditModalOpen}\n        todo={todoToEdit}\n        // editTodo и setIsEditModalOpen будут получены из Context в самом EditTodoModal\n      />\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}