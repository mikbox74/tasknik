{"version":3,"sources":["context.js","Helpers/Sec2time.js","Todo/TodoItem.js","Todo/TodoList.js","Todo/ProjectSelectModal.js","Todo/TodoForm.js","Project/ProjectForm.js","Helpers/ChangeFav.js","Modal/Modal.js","App.js","index.js"],"names":["Context","React","createContext","timeInSeconds","pad","num","size","padStart","time","parseFloat","toFixed","hours","Math","floor","minutes","seconds","slice","styles","li","display","justifyContent","alignItems","marginBottom","padding","boxShadow","TodoItem","project","todo","currentId","index","useContext","removeTodo","toggleTodo","toggleGo","toggleCheck","classes","completed","push","id","style","className","join","type","onChange","bind","onClick","color","strokeWidth","Sec2time","duration","title","round","money","ul","listStyle","textAlign","margin","width","TodoList","props","todos","map","i","projects","find","projectId","key","ProjectSelectModal","isOpen","onClose","onSelect","removeProject","tariff","e","stopPropagation","window","confirm","form","input","paddingLeft","flexGrow","border","height","button","cursor","background","TodoForm","addTodo","titleInput","defaultTitle","useState","setTitle","value","target","clear","useTitleInput","projectInput","defaultProjectId","setProjectId","selectedProject","setSelectedProject","selectProject","useProjectInput","isModalOpen","setIsModalOpen","onSubmit","preventDefault","trim","console","log","alert","placeholder","ProjectForm","addProject","tariffInput","defaultTariff","setTariff","useTariffInput","path","link","document","querySelector","createElement","rel","head","appendChild","href","Modal","tmpDuration","reduce","accumulator","currentValue","Fragment","buttons","marginLeft","borderRadius","button2","button3","appTitle","appSigns","appSignKey","App","setTodos","setProjects","selected","setSelected","totalTime","setTotalTime","setCurrentId","timer","setTimer","selectedTotalTime","setSelectedTotalTime","selectedTotalAmount","setSelectedTotalAmount","lastStartedTodoId","setLastStartedTodoId","useEffect","storageTodos","localStorage","getItem","JSON","parse","storageProjects","storageTotalTime","setItem","stringify","clearInterval","ChangeFav","startAt","Date","now","setInterval","durationMs","diff","minuteCost","prevTT","parseInt","indexOf","calcSelectedTotals","useCallback","length","toggleLastGo","filter","handleExtensionEvent","event","detail","data","hotkey","addEventListener","removeEventListener","active","contextData","checked","concat","item","editTodo","todoIndex","findIndex","Provider","src","alt","packageJson","version","selector","createElementNS","accept","files","file","reader","FileReader","result","location","reload","error","readAsText","dispatchEvent","MouseEvent","importData","blob","date","name","getDate","toString","getMonth","getFullYear","getHours","getMinutes","getSeconds","navigator","msSaveBlob","saver","blobURL","URL","createObjectURL","Blob","download","revokeObjectURL","exportData","paddingRight","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.21bf18a2.chunk.js","sourcesContent":["import React from 'react';\n\nconst Context = React.createContext();\n\nexport default Context","export default function(timeInSeconds) {\n    const pad = (num, size) => (num + \"\").padStart(size, \"0\");\n    const hardPad = (num, size) => ('000' + num).slice(size * -1);\n    const time = parseFloat(timeInSeconds).toFixed(3);\n    const hours = Math.floor(time / 60 / 60);\n    const minutes = Math.floor(time / 60) % 60;\n    const seconds = Math.floor(time - minutes * 60);\n\n    return pad(hours, 2) + ':' + pad(minutes, 2) + ':' + hardPad(seconds, 2);\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Context from '../context';\nimport Sec2time from '../Helpers/Sec2time';\nimport { PlayCircle, PauseCircle, Check, XSquare } from 'react-feather';\n\nconst styles = {\n  li: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '.5rem',\n    padding: '.5rem',\n    boxShadow: '1px 1px 4px 0px rgba(0,0,0,.5)'\n  },\n};\n\nfunction TodoItem({project, todo, index, currentId}) {\n  const {removeTodo, toggleTodo, toggleGo, toggleCheck} = React.useContext(Context);\n  let classes = ['todoTitle'];\n  if (todo.completed) {\n    classes.push('done');\n  }\n  if (todo.id === currentId) {\n    classes.push('go');\n  }\n  return (\n    <li style={styles.li}>\n      <span className={classes.join(' ')}>\n        <input type=\"checkbox\" onChange={toggleCheck.bind(null, todo.id)} />\n        <span className=\"action goAction\" onClick={toggleGo.bind(null, todo.id)}>\n          {(todo.id === currentId) ? <PauseCircle size={16} color=\"red\" strokeWidth=\"2\" /> : <PlayCircle size={16} color=\"blue\" strokeWidth=\"2\" /> }\n        </span>\n        <span className=\"action doneAction\" onClick={toggleTodo.bind(null, todo.id)}>\n          <Check size={16} color=\"green\" strokeWidth=\"2\" />\n        </span>\n        <span className=\"text duration\">\n        {Sec2time(todo.duration)}\n        </span>\n        <span className=\"text title\">\n          <strong>{project.title}:</strong>&nbsp;{todo.title}\n        </span>\n        <span className=\"text money\">\n        {Math.round(todo.money)}\n        </span>\n      </span>\n      <button className=\"action removeAction\" onClick={removeTodo.bind(null, todo.id)}>\n        <XSquare size={16} color=\"red\" strokeWidth=\"2\" />\n      </button>\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  project: PropTypes.object.isRequired,\n  todo: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired,\n  currentId: PropTypes.number.isRequired\n}\n\nexport default TodoItem","import React from 'react';\nimport Todoitem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n  ul: {\n    listStyle: 'none',\n    textAlign: 'left',\n    margin: 0,\n    padding: 0,\n    width: '100%'\n  }\n};\n\nfunction  TodoList (props) {\n  // props.todos.sort(function(a, b) {\n  //   if (a.completed > b.completed) {\n  //     return 1;\n  //   }\n  //   if (a.completed < b.completed) {\n  //     return -1;\n  //   }\n  //   // a должно быть равным b\n  //   return 0;\n  // });\n  return (\n    <div>\n    <h3>{props.title}</h3>\n    <ul style={styles.ul}>\n        {props.todos.map((todo, i) => {\n          let project = props.projects.find((project) => project.id === todo.projectId);\n          return <Todoitem currentId={props.currentId} project={project} todo={todo} key={todo.id} index={i} />;\n        })}\n    </ul>\n    </div>\n  );\n}\n\nTodoList.propTypes = {\n  title: PropTypes.string.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  projects: PropTypes.arrayOf(PropTypes.object).isRequired,\n  currentId: PropTypes.number.isRequired\n}\n\nexport default TodoList","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ProjectSelectModal.css';\nimport Context from '../context';\nimport { Trash2 } from 'react-feather';\n\nfunction ProjectSelectModal({ isOpen, onClose, projects, onSelect }) {\n  const {removeProject} = React.useContext(Context);\n  if (!isOpen) return null;\n  \n  return (\n    <div className=\"modal\">\n      <div className=\"modal-body\">\n        <h2>Выберите проект</h2>\n        <ul className=\"project-list\">\n          {projects.map(project => (\n            <li\n              key={project.id}\n              className=\"project-item\"\n              onClick={() => {\n                onSelect(project);\n                onClose();\n              }}\n              >\n                {project.title}: {project.tariff}\n                <button\n                  className=\"project-delete-button\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    if (window.confirm(`Вы уверены, что хотите удалить проект \"${project.title}\" и все связанные с ним задачи?`)) {\n                      removeProject(project.id);\n                      onClose();\n                    }\n                  }}\n                >\n                  <Trash2 size={20} color=\"red\" strokeWidth=\"2\" />\n                </button>\n            </li>\n          ))}\n        </ul>\n        <button onClick={onClose}>&times;</button>\n      </div>\n    </div>\n  );\n}\n\nProjectSelectModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  projects: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n\nexport default ProjectSelectModal;\n","import React from 'react';\n//import PropTypes from 'prop-types';\nimport Context from '../context';\nimport ProjectSelectModal from './ProjectSelectModal';\n\nconst styles = {\n  form: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '.5rem',\n    padding: '.5rem',\n    boxShadow: '1px 1px 4px 0px rgba(0,0,0,.5)'\n  },\n  input: {\n    paddingLeft: '1rem',\n    flexGrow: 1,\n    border: 0,\n    height: '1.5rem'\n  },\n  button: {\n    cursor: 'pointer',\n    background: '#00FFA9',\n    color: '#fff',\n    border: 0,\n    height: '1.5rem'\n  }\n}\n\nfunction useTitleInput(defaultTitle = '') {\n  const [title, setTitle] = React.useState(defaultTitle);\n\n  return {\n    bind: {\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    },\n    clear: () => setTitle(''),\n    title: () => title\n  }\n}\n\nfunction useProjectInput(defaultProjectId = '') {\n  const [projectId, setProjectId] = React.useState(defaultProjectId);\n  const [selectedProject, setSelectedProject] = React.useState(null);\n\n  return {\n    selectProject: (project) => {\n      setProjectId(project.id);\n      setSelectedProject(project);\n    },\n    clear: () => {\n      setProjectId('');\n      setSelectedProject(null);\n    },\n    projectId,\n    selectedProject\n  }\n}\n\nfunction TodoForm(props) {\n  const {addTodo} = React.useContext(Context);\n  const titleInput = useTitleInput('');\n  const projectInput = useProjectInput('');\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\n\n  function submitTodo (e) {\n    e.preventDefault();\n    if (titleInput.title().trim() && projectInput.projectId) {\n      console.log('projectId: ' + projectInput.projectId);\n      addTodo(titleInput.title(), projectInput.projectId);\n      titleInput.clear();\n      projectInput.clear();\n    } else {\n      alert('Нужно заполнить название и выбрать проект');\n    }\n  }\n  return (\n    <form style={styles.form} onSubmit={submitTodo}>\n      <div>Задачу</div>\n      <input placeholder=\"Название задачи\" style={styles.input} {...titleInput.bind} />\n      <button \n        type=\"button\"\n        style={{\n          ...styles.input,\n          cursor: 'pointer',\n          background: projectInput.selectedProject ? '#fff' : '#f5f5f5'\n        }}\n        onClick={() => setIsModalOpen(true)}\n      >\n        {projectInput.selectedProject \n          ? `${projectInput.selectedProject.title}: ${projectInput.selectedProject.tariff}`\n          : 'Выберите проект...'}\n      </button>\n      <ProjectSelectModal\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        projects={props.projects}\n        onSelect={projectInput.selectProject}\n      />\n      <button style={styles.button} type=\"submit\">Создать задачу</button>\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React from 'react';\nimport Context from '../context';\n\nconst styles = {\n  form: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '.5rem',\n    padding: '.5rem',\n    boxShadow: '1px 1px 4px 0px rgba(0,0,0,.5)'\n  },\n  input: {\n    paddingLeft: '1rem',\n    flexGrow: 1,\n    border: 0,\n    height: '1.5rem'\n  },\n  button: {\n    cursor: 'pointer',\n    background: '#293685',\n    color: '#fff',\n    border: 0,\n    height: '1.5rem'\n  }\n}\n\nfunction useTitleInput(defaultTitle = '') {\n  const [title, setTitle] = React.useState(defaultTitle);\n\n  return {\n    bind: {\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    },\n    clear: () => setTitle(''),\n    title: () => title\n  }\n}\n\nfunction useTariffInput(defaultTariff = '') {\n  const [tariff, setTariff] = React.useState(defaultTariff);\n\n  return {\n    bind: {\n      value: tariff,\n      onChange: e => setTariff(e.target.value)\n    },\n    clear: () => setTariff(''),\n    tariff: () => tariff\n  }\n}\n\nexport default function ProjectForm() {\n  const {addProject} = React.useContext(Context);\n  const titleInput = useTitleInput('');\n  const tariffInput = useTariffInput('');\n\n  function submitProject (e) {\n    e.preventDefault();\n    if (titleInput.title().trim()) {\n      addProject(titleInput.title(), tariffInput.tariff());\n      titleInput.clear();\n      tariffInput.clear();\n    } else {\n      alert('Нужно заполнить название');\n    }\n  }\n  return (\n    <form style={styles.form} onSubmit={submitProject}>\n      <div>Проект</div>\n      <input placeholder=\"Название проекта\" style={styles.input} {...titleInput.bind} />\n      <input placeholder=\"Стоимость часа\" style={styles.input} {...tariffInput.bind} />\n      <button style={styles.button} type=\"submit\">Создать проект</button>\n    </form>\n  );\n}","export default function (path) {\n    let link = document.querySelector('link[rel=\"shortcut icon\"]') ||\n    document.querySelector('link[rel=\"icon\"]');\n\n    if (!link) {\n        link = document.createElement('link');\n        link.id = 'favicon';\n        link.rel = 'shortcut icon';\n        document.head.appendChild(link);\n    }\n\n    link.href = path;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Context from '../context';\nimport Sec2time from '../Helpers/Sec2time';\nimport './Modal.css';\n\nfunction Modal(props) {\n  const {setIsModalOpen} = React.useContext(Context);\n  let projects = props.projects.map((project) => {\n    let tmpDuration = props.todos.map((todo) => {\n      if (todo.projectId === project.id) {\n        return todo.tmpDuration;\n      }\n      return 0;\n    }).reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n    return {\n      id: project.id,\n      title: project.title,\n      tmpDuration\n    }\n  })\n  return (\n    <React.Fragment>\n      {props.isOpen && (<div className=\"modal\">\n        <div className=\"modal-body\">\n          <h2>По проектам</h2>\n          {\n          // eslint-disable-next-line\n          projects.map(project => {\n            if (project.tmpDuration) {\n              return (<p key={project.id}>{project.title}: ~{Sec2time(project.tmpDuration)}</p>)\n            }\n          })}\n          <button onClick={() => setIsModalOpen(false)}>&times;</button>\n        </div>\n      </div>)}\n    </React.Fragment>\n  );\n}\n\nModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  projects: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default Modal","import React from 'react';\nimport './App.scss';\nimport TodoList from './Todo/TodoList';\nimport TodoForm from './Todo/TodoForm';\nimport ProjectForm from './Project/ProjectForm';\nimport Context from './context';\nimport Sec2time from './Helpers/Sec2time';\nimport ChangeFav from './Helpers/ChangeFav';\nimport Modal from './Modal/Modal';\nimport packageJson from '../package.json';\nimport { XCircle } from 'react-feather';\n\nconst styles = {\n  buttons: {\n    padding:0,\n    marginLeft: \"auto\",\n    alignItems: \"center\"\n  },\n  button: {\n    cursor: 'pointer',\n    color: '#e91615',\n    background: 'transparent',\n    border: '2px solid',\n    borderRadius: '3px',\n    height: '1.5rem'\n  },\n  button2: {\n    marginLeft: \".5rem\",\n    color: '#40a040'\n  },\n  button3: {\n    background: 'transparent',\n    // border: '1px solid',\n  }\n}\n\nconst appTitle = document.title \nconst appSigns = [\"[▶]\", \"[◀]\"]\nlet appSignKey = 0\n\nfunction App() {\n  const [todos, setTodos] = React.useState([\n    // {id: 1, projectId: 1, title: 'Купить хлеб', completed: true, duration: 0, money: 0, minuteCost: 0, tmpDuration: 0},\n  ]);\n\n  const [projects, setProjects] = React.useState([\n    // {id: 1, title: 'Проект', tariff: 800},\n  ]);\n\n  const [selected, setSelected] = React.useState([\n    // 1601760513846,\n  ]);\n\n\n  const [totalTime, setTotalTime] = React.useState(0);\n  const [currentId, setCurrentId] = React.useState(0);\n  const [timer, setTimer] = React.useState(0);\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\n\n  const [selectedTotalTime, setSelectedTotalTime] = React.useState(0);\n  const [selectedTotalAmount, setSelectedTotalAmount] = React.useState(0);\n  const [lastStartedTodoId, setLastStartedTodoId] = React.useState(null); // Переименовано состояние для ID последнего ЗАПУЩЕННОГО Todo\n\n  React.useEffect(() => {\n    let storageTodos = localStorage.getItem('todos');\n    storageTodos && setTodos(JSON.parse(storageTodos));\n\n    let storageProjects = localStorage.getItem('projects');\n    storageProjects && setProjects(JSON.parse(storageProjects));\n\n    let storageTotalTime = localStorage.getItem('totalTime');\n    storageTotalTime && setTotalTime(storageTotalTime);\n  \n  }, []);\n\n  React.useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n  }, [todos]);\n\n  React.useEffect(() => {\n    localStorage.setItem('projects', JSON.stringify(projects))\n  }, [projects]);\n\n  React.useEffect(() => {\n    localStorage.setItem('totalTime', totalTime)\n  }, [totalTime]);\n\n  React.useEffect(() => {\n    console.log(currentId);\n    if (!currentId) {\n      clearInterval(timer);\n      ChangeFav('./favicon.ico');\n      document.title = appTitle;\n    } else {\n      clearInterval(timer);\n      ChangeFav('./favicon-go.ico');\n      let startAt = Date.now();\n      setTimer(setInterval(() => {\n        document.title = appSigns[appSignKey] + \" \" + appTitle;\n        appSignKey = (appSignKey+1)%2\n        setTodos(\n          todos.map(todo => {\n            if (todo.id === currentId) {\n              todo.durationMs || (todo.durationMs = todo.duration*1000);\n              let diff = Date.now() - startAt;\n              todo.durationMs += diff;\n              startAt = Date.now();\n              todo.duration = Math.round(todo.durationMs / 1000);\n              todo.tmpDuration++;\n              if (todo.duration % 60 === 0) {\n                todo.money += todo.minuteCost;\n              }\n              setTotalTime(prevTT => parseInt(prevTT, 10) + 1);\n            }\n            return todo;\n          })\n        );\n      }, 1000));\n    }\n    // eslint-disable-next-line\n  }, [currentId]);\n\n  React.useEffect(() => {\n    calcSelectedTotals()\n    // eslint-disable-next-line\n  }, [selected]);\n\n  // Определение toggleTodo\n  const toggleTodo = React.useCallback((id) => {\n    console.log('toggleTodo ' + id);\n    // setLastToggledTodoId(id); // Больше не запоминаем ID здесь\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n          if (todo.completed && (id === currentId)) {\n            setCurrentId(0);\n          }\n        }\n        return todo;\n      })\n    );\n  }, [currentId, setCurrentId, setTodos, todos]); // Удалена зависимость setLastToggledTodoId\n\n  // Оборачиваем toggleGo в useCallback и добавляем логику сохранения ID\n  // Перемещено ПЕРЕД toggleLastGo\n  const toggleGo = React.useCallback((id) => {\n    console.log('toggleGo ' + id);\n\n    for (let i=0; i < todos.length; i++) {\n      if ((todos[i].id === id) && !todos[i].completed) {\n        if (id === currentId) {\n          setCurrentId(0); // Останавливаем таймер\n        } else {\n          setLastStartedTodoId(id); // Запоминаем ID при запуске\n          setCurrentId(id); // Запускаем таймер\n        }\n        break;\n      }\n    }\n  }, [currentId, todos, setCurrentId, setLastStartedTodoId]); // Добавлены зависимости\n\n  // Новая функция для переключения последнего ЗАПУЩЕННОГО Todo\n  const toggleLastGo = React.useCallback(() => {\n    if (lastStartedTodoId === null) {\n      console.log('toggleLastGo: lastStartedTodoId не определен');\n      return; // Ничего не делаем, если ID не запомнен\n    }\n\n    const lastStartedTodo = todos.find(todo => todo.id === lastStartedTodoId);\n\n    if (!lastStartedTodo) {\n      console.log(`toggleLastGo: Todo с ID ${lastStartedTodoId} не найден`);\n      return; // Ничего не делаем, если Todo не найден\n    }\n\n    // Проверка на completed не нужна, т.к. toggleGo ее выполняет\n    console.log(`toggleLastGo: Переключаем таймер для Todo с ID ${lastStartedTodoId}`);\n    toggleGo(lastStartedTodoId); // Вызываем toggleGo для последнего запущенного Todo\n  }, [lastStartedTodoId, todos, toggleGo]); // Обновлены зависимости\n\n  React.useEffect(() => {\n    const handleExtensionEvent = (event) => {\n      if (event.detail.data.hotkey === \"hotkey1\") {\n        // console.log('Хоткей получен!');\n        toggleLastGo(); // Вызываем toggleLastGo\n      }\n    };\n\n    window.addEventListener('globalHotkey', handleExtensionEvent);\n    \n    return () => {\n      window.removeEventListener('globalHotkey', handleExtensionEvent);\n    };\n    // Удален дублирующийся блок window.addEventListener/removeEventListener\n  }, [toggleLastGo]); // Обновлена зависимость\n\n\n  function removeTodo(id) {\n    console.log('removeTodo ' + id);\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  function addTodo(title, projectId) {\n    console.log('addTodo ' + title);\n    projectId = parseInt(projectId, 10);\n    let project = projects.find((project) => project.id === projectId);\n    setTodos(todos.concat([{\n      id: Date.now(),\n      projectId,\n      title,\n      completed: false,\n      duration: 0,\n      durationMs: 0,\n      money: 0,\n      minuteCost: parseInt(project.tariff, 10)/60,\n      tmpDuration: 0\n    }]));\n  }\n\n  function editTodo(id, title) {\n    console.log('editTodo ' + id);\n    let todoIndex = todos.findIndex((todo) => todo.id === id);\n    console.log(todos[todoIndex].title = title);\n    setTodos(todos);\n  }\n\n  function addProject(title, tariff) {\n    console.log('addProject ' + title);\n    setProjects(projects.concat([{\n      id: Date.now(),\n      title,\n      tariff: parseInt(tariff, 10)\n    }]));\n  }\n\n  function removeProject(id) {\n    console.log('removeProject ' + id);\n    setProjects(projects.filter(project => project.id !== id));\n    setTodos(todos.filter(todo => todo.projectId !== id));\n    localStorage.setItem('projects', JSON.stringify(projects));\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }\n\n  // Определение toggleGo перемещено выше\n\n  function toggleCheck(id, e) {\n    if (e.target.checked)\n      setSelected(selected.concat([id]));\n    else \n      setSelected(selected.filter(item => item !== id));\n  }\n\n  function resetTotalTime() {\n    setTotalTime(0);\n    setTodos(\n      todos.map(todo => {\n        todo.tmpDuration = 0;\n        return todo;\n      })\n    );\n  }\n\n  function exportData() {\n    let blob = JSON.stringify({\n      totalTime: localStorage.getItem('totalTime'),\n      todos: localStorage.getItem('todos'),\n      projects: localStorage.getItem('projects'),\n    })\n\n    let date = new Date()\n    let name = \"tasknik \"\n    //day\n    name += `${date.getDate().toString().padStart(2, \"0\")}-${(date.getMonth()+1).toString().padStart(2, \"0\")}-${date.getFullYear()}`\n    //time\n    name += ` ${date.getHours().toString().padStart(2, \"0\")}-${date.getMinutes().toString().padStart(2, \"0\")}-${date.getSeconds().toString().padStart(2, \"0\")}`\n    //extension\n    name += \".json\"\n\n    if (typeof navigator.msSaveBlob == \"function\") {\n      return navigator.msSaveBlob(blob, name)\n    }\n\n    let saver = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n    let blobURL = URL.createObjectURL(new Blob([blob], {type: \"application/json\"}))\n\n    saver.href = blobURL\n    saver.download = name\n    saver.dispatchEvent(new MouseEvent(\"click\"))\n    URL.revokeObjectURL(blobURL)\n    saver = null\n  }\n\n  function importData() {\n    if (window.confirm(\"Все задачи, проекты и таймеры будут перезаписаны. Продолжить?\")) {\n      setCurrentId(0)\n      let selector = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"input\")\n      selector.type = \"file\"\n      selector.accept = \"application/json\"\n      selector.addEventListener(\"change\", () => {\n        if (selector.files && selector.files[0]) {\n          let file = selector.files[0]\n          let reader = new FileReader()\n          reader.addEventListener('load', function (e) {\n            try {\n              let result = JSON.parse(e.target.result)\n              localStorage.setItem('totalTime', result.totalTime)\n              // Process todos to ensure durationMs field\n              let todos = JSON.parse(result.todos).map(todo => {\n                if (!todo.durationMs) {\n                  todo.durationMs = todo.duration * 1000;\n                }\n                return todo;\n              });\n              localStorage.setItem('todos', JSON.stringify(todos))\n              localStorage.setItem('projects', result.projects)\n              window.location.reload()\n            } catch (e) {\n              console.error(e);\n              window.alert(\"Не удалось прочитать файл\")\n            }\n          })\n          reader.readAsText(file)\n        }\n        selector = null\n      })\n      selector.dispatchEvent(new MouseEvent(\"click\"))\n    }\n  }\n\n  function calcSelectedTotals() {\n    let selectedTotalTime = 0\n    let selectedTotalAmount = 0\n    console.log(selected)\n    // eslint-disable-next-line\n    todos.map(todo => {\n      if (selected.indexOf(todo.id) !== -1) {\n        selectedTotalTime += todo.duration\n        selectedTotalAmount += todo.money\n      }\n    })\n    setSelectedTotalTime(selectedTotalTime)\n    setSelectedTotalAmount(selectedTotalAmount)\n  }\n\n  let active = todos.filter((todo => !todo.completed))\n  let completed = todos.filter((todo => todo.completed))\n\n  let contextData = {\n    toggleCheck, \n    removeTodo, \n    toggleTodo, \n    addTodo, \n    editTodo, \n    addProject, \n    toggleGo,\n    setIsModalOpen,\n    removeProject\n  }\n\n  return (\n    <Context.Provider value={contextData}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div>\n            <div style={{padding:0}}>\n              <img src=\"./time-2-32.png\" alt=\"Tasknik\"/>&nbsp;\n              Tasknik v.{packageJson.version}\n            </div>\n            <div style={styles.buttons}>\n              <button \n                style={styles.button} \n                onClick={() => (importData())}\n                type=\"button\">Импорт</button>\n              <button \n                style={{...styles.button, ...styles.button2}} \n                onClick={() => (exportData())}\n                type=\"button\">Экспорт</button>\n            </div>\n          </div>\n        </header>\n        <div className=\"App-content\">\n          <div>\n            {active.length? <TodoList title=\"Активные\" todos={active} projects={projects} currentId={currentId} /> : <p>Нет активных задач</p>}\n            <h3>Создать</h3>\n            <TodoForm projects={projects} />\n            <ProjectForm />\n            {completed.length? (<TodoList title=\"Завершенные\" todos={completed} projects={projects} currentId={currentId} />) : <p>Нет завершенных задач</p>}\n          </div>\n        </div>\n        <footer className=\"App-footer\">\n          <div className=\"totalTimer\" onClick={() => (setIsModalOpen(true))}>\n            Всего: ~{Sec2time(totalTime)} &nbsp;\n          </div>\n          <span title=\"Сбросить общий таймер\" className=\"action resetTotalAction\" onClick={() => resetTotalTime()}>\n            <XCircle size={16} color=\"orange\" strokeWidth=\"2\" />\n          </span>\n          \n          <div style={{...styles.buttons, paddingRight: \"2rem\"}}>\n            <span>\n              Итог по выбранным: {Sec2time(selectedTotalTime)} / {Math.round(selectedTotalAmount)}\n            </span>\n          </div>\n        </footer>\n      </div>\n      <Modal \n        isOpen={isModalOpen} \n        todos={todos} \n        projects={projects}\n        removeProject={removeProject}\n      />\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}