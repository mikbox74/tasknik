{"version":3,"sources":["context.js","Helpers/Sec2time.js","Todo/TodoItem.js","Todo/TodoList.js","Todo/TodoForm.js","Project/ProjectForm.js","Helpers/ChangeFav.js","Modal/Modal.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","timeInSeconds","pad","num","size","padStart","time","parseFloat","toFixed","hours","Math","floor","minutes","seconds","slice","styles","li","display","justifyContent","alignItems","marginBottom","padding","boxShadow","TodoItem","project","todo","currentId","index","useContext","removeTodo","toggleTodo","toggleGo","toggleCheck","classes","completed","push","id","style","className","join","type","onChange","bind","onClick","Sec2time","duration","title","round","money","ul","listStyle","textAlign","margin","width","TodoList","props","todos","map","i","projects","find","projectId","key","form","input","paddingLeft","flexGrow","border","height","button","cursor","background","color","TodoForm","addTodo","titleInput","defaultTitle","useState","setTitle","value","e","target","clear","useTitleInput","projectInput","defaultProjectId","setProjectId","useProjectInput","onSubmit","preventDefault","trim","console","log","alert","placeholder","tariff","ProjectForm","addProject","tariffInput","defaultTariff","setTariff","useTariffInput","path","link","document","querySelector","createElement","rel","head","appendChild","href","Modal","setIsModalOpen","tmpDuration","reduce","accumulator","currentValue","Fragment","isOpen","buttons","marginLeft","button2","button3","appTitle","appSigns","appSignKey","App","setTodos","setProjects","selected","setSelected","totalTime","setTotalTime","setCurrentId","timer","setTimer","isModalOpen","selectedTotalTime","setSelectedTotalTime","selectedTotalAmount","setSelectedTotalAmount","useEffect","storageTodos","localStorage","getItem","JSON","parse","storageProjects","storageTotalTime","setItem","stringify","clearInterval","ChangeFav","setInterval","minuteCost","prevTT","parseInt","active","filter","contextData","checked","concat","item","Date","now","editTodo","todoIndex","findIndex","length","Provider","src","alt","packageJson","version","window","confirm","selector","createElementNS","accept","addEventListener","files","file","reader","FileReader","result","location","reload","readAsText","dispatchEvent","MouseEvent","importData","blob","date","name","getDate","toString","getMonth","getFullYear","getHours","getMinutes","getSeconds","navigator","msSaveBlob","saver","blobURL","URL","createObjectURL","Blob","download","revokeObjectURL","exportData","paddingRight","indexOf","calcSelectedTotals","Boolean","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5de5b67c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Context = React.createContext();\n\nexport default Context","export default function(timeInSeconds) {\r\n    const pad = (num, size) => (num + \"\").padStart(size, \"0\");\r\n    const hardPad = (num, size) => ('000' + num).slice(size * -1);\r\n    const time = parseFloat(timeInSeconds).toFixed(3);\r\n    const hours = Math.floor(time / 60 / 60);\r\n    const minutes = Math.floor(time / 60) % 60;\r\n    const seconds = Math.floor(time - minutes * 60);\r\n\r\n    return pad(hours, 2) + ':' + pad(minutes, 2) + ':' + hardPad(seconds, 2);\r\n}\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Context from '../context';\r\nimport Sec2time from '../Helpers/Sec2time';\r\n\r\nconst styles = {\r\n  li: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: '.5rem',\r\n    padding: '.5rem',\r\n    boxShadow: '1px 1px 4px 0px rgba(0,0,0,.5)'\r\n  },\r\n};\r\n\r\nfunction TodoItem({project, todo, index, currentId}) {\r\n  const {removeTodo, toggleTodo, toggleGo, toggleCheck} = React.useContext(Context);\r\n  let classes = ['todoTitle'];\r\n  if (todo.completed) {\r\n    classes.push('done');\r\n  }\r\n  if (todo.id === currentId) {\r\n    classes.push('go');\r\n  }\r\n  return (\r\n    <li style={styles.li}>\r\n      <span className={classes.join(' ')}>\r\n        <input type=\"checkbox\" onChange={toggleCheck.bind(null, todo.id)} />\r\n        <span className=\"action goAction\" onClick={toggleGo.bind(null, todo.id)}></span>\r\n        <span className=\"action doneAction\" onClick={toggleTodo.bind(null, todo.id)}></span>\r\n        <span className=\"text duration\">\r\n        {Sec2time(todo.duration)}\r\n        </span>\r\n        <span className=\"text title\">\r\n          <strong>{project.title}:</strong>&nbsp;{todo.title}\r\n        </span>\r\n        <span className=\"text money\">\r\n        {Math.round(todo.money)}\r\n        </span>\r\n      </span>\r\n      <button className=\"action removeAction\" onClick={removeTodo.bind(null, todo.id)}>&nbsp;</button>\r\n    </li>\r\n  );\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  todo: PropTypes.object.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  currentId: PropTypes.number.isRequired\r\n}\r\n\r\nexport default TodoItem","import React from 'react';\nimport Todoitem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n  ul: {\n    listStyle: 'none',\n    textAlign: 'left',\n    margin: 0,\n    padding: 0,\n    width: '100%'\n  }\n};\n\nfunction  TodoList (props) {\n  // props.todos.sort(function(a, b) {\n  //   if (a.completed > b.completed) {\n  //     return 1;\n  //   }\n  //   if (a.completed < b.completed) {\n  //     return -1;\n  //   }\n  //   // a должно быть равным b\n  //   return 0;\n  // });\n  return (\n    <div>\n    <h3>{props.title}</h3>\n    <ul style={styles.ul}>\n        {props.todos.map((todo, i) => {\n          let project = props.projects.find((project) => project.id === todo.projectId);\n          return <Todoitem currentId={props.currentId} project={project} todo={todo} key={todo.id} index={i} />;\n        })}\n    </ul>\n    </div>\n  );\n}\n\nTodoList.propTypes = {\n  title: PropTypes.string.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  projects: PropTypes.arrayOf(PropTypes.object).isRequired,\n  currentId: PropTypes.number.isRequired\n}\n\nexport default TodoList","import React from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport Context from '../context';\r\n\r\nconst styles = {\r\n  form: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: '.5rem',\r\n    padding: '.5rem',\r\n    boxShadow: '1px 1px 4px 0px rgba(0,0,0,.5)'\r\n  },\r\n  input: {\r\n    paddingLeft: '1rem',\r\n    flexGrow: 1,\r\n    border: 0,\r\n    height: '1.5rem'\r\n  },\r\n  button: {\r\n    cursor: 'pointer',\r\n    background: '#00FFA9',\r\n    color: '#fff',\r\n    border: 0,\r\n    height: '1.5rem'\r\n  }\r\n}\r\n\r\nfunction useTitleInput(defaultTitle = '') {\r\n  const [title, setTitle] = React.useState(defaultTitle);\r\n\r\n  return {\r\n    bind: {\r\n      value: title,\r\n      onChange: e => setTitle(e.target.value)\r\n    },\r\n    clear: () => setTitle(''),\r\n    title: () => title\r\n  }\r\n}\r\n\r\nfunction useProjectInput(defaultProjectId = '') {\r\n  const [projectId, setProjectId] = React.useState(defaultProjectId);\r\n\r\n  return {\r\n    onChange: e => setProjectId(e.target.value),\r\n    clear: () => setProjectId(''),\r\n    projectId: projectId\r\n  }\r\n}\r\n\r\nfunction TodoForm(props) {\r\n  const {addTodo} = React.useContext(Context);\r\n  const titleInput = useTitleInput('');\r\n  const projectInput = useProjectInput('');\r\n\r\n  function submitTodo (e) {\r\n    e.preventDefault();\r\n    if (titleInput.title().trim() && projectInput.projectId) {\r\n      console.log('projectId: ' + projectInput.projectId);\r\n      addTodo(titleInput.title(), projectInput.projectId);\r\n      titleInput.clear();\r\n      projectInput.clear();\r\n    } else {\r\n      alert('Нужно заполнить название и выбрать проект');\r\n    }\r\n  }\r\n  return (\r\n    <form style={styles.form} onSubmit={submitTodo}>\r\n      <div>Задачу</div>\r\n      <input placeholder=\"Название задачи\" style={styles.input} {...titleInput.bind} />\r\n      <select style={styles.input} value={projectInput.projectId} onChange={projectInput.onChange}>\r\n      <option value=\"\">Выберите проект...</option>\r\n        {props.projects.map((project, i) => {\r\n          return <option key={project.id} value={project.id}>{project.title}: {project.tariff}</option>;\r\n        })}\r\n      </select>\r\n      <button style={styles.button} type=\"submit\">Создать задачу</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;","import React from 'react';\r\nimport Context from '../context';\r\n\r\nconst styles = {\r\n  form: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: '.5rem',\r\n    padding: '.5rem',\r\n    boxShadow: '1px 1px 4px 0px rgba(0,0,0,.5)'\r\n  },\r\n  input: {\r\n    paddingLeft: '1rem',\r\n    flexGrow: 1,\r\n    border: 0,\r\n    height: '1.5rem'\r\n  },\r\n  button: {\r\n    cursor: 'pointer',\r\n    background: '#293685',\r\n    color: '#fff',\r\n    border: 0,\r\n    height: '1.5rem'\r\n  }\r\n}\r\n\r\nfunction useTitleInput(defaultTitle = '') {\r\n  const [title, setTitle] = React.useState(defaultTitle);\r\n\r\n  return {\r\n    bind: {\r\n      value: title,\r\n      onChange: e => setTitle(e.target.value)\r\n    },\r\n    clear: () => setTitle(''),\r\n    title: () => title\r\n  }\r\n}\r\n\r\nfunction useTariffInput(defaultTariff = '') {\r\n  const [tariff, setTariff] = React.useState(defaultTariff);\r\n\r\n  return {\r\n    bind: {\r\n      value: tariff,\r\n      onChange: e => setTariff(e.target.value)\r\n    },\r\n    clear: () => setTariff(''),\r\n    tariff: () => tariff\r\n  }\r\n}\r\n\r\nexport default function ProjectForm() {\r\n  const {addProject} = React.useContext(Context);\r\n  const titleInput = useTitleInput('');\r\n  const tariffInput = useTariffInput('');\r\n\r\n  function submitProject (e) {\r\n    e.preventDefault();\r\n    if (titleInput.title().trim()) {\r\n      addProject(titleInput.title(), tariffInput.tariff());\r\n      titleInput.clear();\r\n      tariffInput.clear();\r\n    } else {\r\n      alert('Нужно заполнить название');\r\n    }\r\n  }\r\n  return (\r\n    <form style={styles.form} onSubmit={submitProject}>\r\n      <div>Проект</div>\r\n      <input placeholder=\"Название проекта\" style={styles.input} {...titleInput.bind} />\r\n      <input placeholder=\"Стоимость часа\" style={styles.input} {...tariffInput.bind} />\r\n      <button style={styles.button} type=\"submit\">Создать проект</button>\r\n    </form>\r\n  );\r\n}","export default function (path) {\r\n    let link = document.querySelector('link[rel=\"shortcut icon\"]') ||\r\n    document.querySelector('link[rel=\"icon\"]');\r\n\r\n    if (!link) {\r\n        link = document.createElement('link');\r\n        link.id = 'favicon';\r\n        link.rel = 'shortcut icon';\r\n        document.head.appendChild(link);\r\n    }\r\n\r\n    link.href = path;\r\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Context from '../context';\nimport Sec2time from '../Helpers/Sec2time';\nimport './Modal.css';\n\nfunction Modal(props) {\n  const {setIsModalOpen} = React.useContext(Context);\n  let projects = props.projects.map((project) => {\n    let tmpDuration = props.todos.map((todo) => {\n      if (todo.projectId == project.id) {\n        return todo.tmpDuration;\n      }\n      return 0;\n    }).reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n    return {\n      id: project.id,\n      title: project.title,\n      tmpDuration\n    }\n  })\n  return (\n    <React.Fragment>\n      {props.isOpen && (<div className=\"modal\">\n        <div className=\"modal-body\">\n          <h2>По проектам</h2>\n          {projects.map(project => {\n            if (project.tmpDuration) {\n              return (<p key={project.id}>{project.title}: {Sec2time(project.tmpDuration)}</p>)\n            }\n          })}\n          <button onClick={() => setIsModalOpen(false)}>&times;</button>\n        </div>\n      </div>)}\n    </React.Fragment>\n  );\n}\n\nModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  projects: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default Modal","import React from 'react';\r\nimport './App.css';\r\nimport TodoList from './Todo/TodoList';\r\nimport TodoForm from './Todo/TodoForm';\r\nimport ProjectForm from './Project/ProjectForm';\r\nimport Context from './context';\r\nimport Sec2time from './Helpers/Sec2time';\r\nimport ChangeFav from './Helpers/ChangeFav';\r\nimport Modal from './Modal/Modal';\r\nimport packageJson from '../package.json';\r\n\r\nconst styles = {\r\n  buttons: {\r\n    padding:0,\r\n    marginLeft: \"auto\",\r\n    alignItems: \"center\"\r\n  },\r\n  button: {\r\n    cursor: 'pointer',\r\n    background: '#e91615',\r\n    color: '#fff',\r\n    border: 0,\r\n    height: '1.5rem'\r\n  },\r\n  button2: {\r\n    marginLeft: \".5rem\",\r\n    background: '#29f605'\r\n  },\r\n  button3: {\r\n    background: 'transparent',\r\n    // border: '1px solid',\r\n  }\r\n}\r\n\r\nconst appTitle = document.title \r\nconst appSigns = [\"[▶]\", \"[◀]\"]\r\nlet appSignKey = 0\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = React.useState([\r\n    // {id: 1, projectId: 1, title: 'Купить хлеб', completed: true, duration: 0, money: 0, minuteCost: 0, tmpDuration: 0},\r\n  ]);\r\n\r\n  const [projects, setProjects] = React.useState([\r\n    // {id: 1, title: 'Проект', tariff: 800},\r\n  ]);\r\n\r\n  const [selected, setSelected] = React.useState([\r\n    // 1601760513846,\r\n  ]);\r\n\r\n\r\n  const [totalTime, setTotalTime] = React.useState(0);\r\n  const [currentId, setCurrentId] = React.useState(0);\r\n  const [timer, setTimer] = React.useState(0);\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n\r\n  const [selectedTotalTime, setSelectedTotalTime] = React.useState(0);\r\n  const [selectedTotalAmount, setSelectedTotalAmount] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    let storageTodos = localStorage.getItem('todos');\r\n    storageTodos && setTodos(JSON.parse(storageTodos));\r\n\r\n    let storageProjects = localStorage.getItem('projects');\r\n    storageProjects && setProjects(JSON.parse(storageProjects));\r\n\r\n    let storageTotalTime = localStorage.getItem('totalTime');\r\n    storageTotalTime && setTotalTime(storageTotalTime);\r\n  \r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n  }, [todos]);\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem('projects', JSON.stringify(projects))\r\n  }, [projects]);\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem('totalTime', totalTime)\r\n  }, [totalTime]);\r\n\r\n  React.useEffect(() => {\r\n    console.log(currentId);\r\n    if (!currentId) {\r\n      clearInterval(timer);\r\n      ChangeFav('./favicon.ico');\r\n      document.title = appTitle;\r\n    } else {\r\n      clearInterval(timer);\r\n      ChangeFav('./favicon-go.ico');\r\n      setTimer(setInterval(() => {\r\n        document.title = appSigns[appSignKey] + \" \" + appTitle;\r\n        appSignKey = (appSignKey+1)%2\r\n        setTodos(\r\n          todos.map(todo => {\r\n            if (todo.id === currentId) {\r\n              todo.duration++;\r\n              if (!todo.tmpDuration) {\r\n                todo.tmpDuration = 0;\r\n              }\r\n              todo.tmpDuration++;\r\n              if (todo.duration % 60 === 0) {\r\n                todo.money += todo.minuteCost;\r\n              }\r\n              setTotalTime(prevTT => parseInt(prevTT, 10) + 1);\r\n            }\r\n            return todo;\r\n          })\r\n        );\r\n      }, 1000));\r\n    }\r\n  }, [currentId]);\r\n\r\n  function toggleTodo(id) {\r\n    console.log('toggleTodo ' + id);\r\n    setTodos(\r\n      todos.map(todo => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed;\r\n          if (todo.completed && (id === currentId)) {\r\n            setCurrentId(0);\r\n          }\r\n        }\r\n        return todo;\r\n      })\r\n    );\r\n  }\r\n\r\n  function removeTodo(id) {\r\n    console.log('removeTodo ' + id);\r\n    setTodos(todos.filter(todo => todo.id !== id));\r\n  }\r\n\r\n  function addTodo(title, projectId) {\r\n    console.log('addTodo ' + title);\r\n    projectId = parseInt(projectId, 10);\r\n    let project = projects.find((project) => project.id === projectId);\r\n    setTodos(todos.concat([{\r\n      id: Date.now(),\r\n      projectId,\r\n      title,\r\n      completed: false,\r\n      duration: 0,\r\n      money: 0,\r\n      minuteCost: parseInt(project.tariff, 10)/60,\r\n      tmpDuration: 0\r\n    }]));\r\n  }\r\n\r\n  function editTodo(id, title) {\r\n    console.log('editTodo ' + id);\r\n    let todoIndex = todos.findIndex((todo) => todo.id === id);\r\n    console.log(todos[todoIndex].title = title);\r\n    setTodos(todos);\r\n  }\r\n\r\n  function addProject(title, tariff) {\r\n    console.log('addProject ' + title);\r\n    setProjects(projects.concat([{\r\n      id: Date.now(),\r\n      title,\r\n      tariff: parseInt(tariff, 10)\r\n    }]));\r\n  }\r\n\r\n  function toggleGo(id) {\r\n    console.log('toggleGo ' + id);\r\n\r\n    for (let i=0; i < todos.length; i++) {\r\n      if ((todos[i].id === id) && !todos[i].completed) {\r\n        if (id === currentId) {\r\n          setCurrentId(0);\r\n        } else {\r\n          setCurrentId(id);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  function toggleCheck(id, e) {\r\n    if (e.target.checked)\r\n      setSelected(selected.concat([id]))\r\n    else \r\n      setSelected(selected.filter(item => item !== id));\r\n  }\r\n\r\n  function resetTotalTime() {\r\n    setTotalTime(0);\r\n    setTodos(\r\n      todos.map(todo => {\r\n        todo.tmpDuration = 0;\r\n        return todo;\r\n      })\r\n    );\r\n  }\r\n\r\n  function exportData() {\r\n    let blob = JSON.stringify({\r\n      totalTime: localStorage.getItem('totalTime'),\r\n      todos: localStorage.getItem('todos'),\r\n      projects: localStorage.getItem('projects'),\r\n    })\r\n\r\n    let date = new Date()\r\n    let name = \"tasknik \"\r\n    //day\r\n    name += `${date.getDate().toString().padStart(2, \"0\")}-${(date.getMonth()+1).toString().padStart(2, \"0\")}-${date.getFullYear()}`\r\n    //time\r\n    name += ` ${date.getHours().toString().padStart(2, \"0\")}-${date.getMinutes().toString().padStart(2, \"0\")}-${date.getSeconds().toString().padStart(2, \"0\")}`\r\n    //extension\r\n    name += \".json\"\r\n\r\n    if (typeof navigator.msSaveBlob == \"function\") {\r\n      return navigator.msSaveBlob(blob, name)\r\n    }\r\n\r\n    let saver = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\r\n    let blobURL = URL.createObjectURL(new Blob([blob], {type: \"application/json\"}))\r\n\r\n    saver.href = blobURL\r\n    saver.download = name\r\n    saver.dispatchEvent(new MouseEvent(\"click\"))\r\n    URL.revokeObjectURL(blobURL)\r\n    saver = null\r\n  }\r\n\r\n  function importData() {\r\n    if (window.confirm(\"Все задачи, проекты и таймеры будут перезаписаны. Продолжить?\")) {\r\n      setCurrentId(0)\r\n      let selector = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"input\")\r\n      selector.type = \"file\"\r\n      selector.accept = \"application/json\"\r\n      selector.addEventListener(\"change\", () => {\r\n        if (selector.files && selector.files[0]) {\r\n          let file = selector.files[0]\r\n          let reader = new FileReader()\r\n          reader.addEventListener('load', function (e) {\r\n            try {\r\n              let result = JSON.parse(e.target.result)\r\n              localStorage.setItem('totalTime', result.totalTime)\r\n              localStorage.setItem('todos', result.todos)\r\n              localStorage.setItem('projects', result.projects)\r\n              window.location.reload()\r\n            } catch (e) {\r\n              window.alert(\"Не удалось прочитать файл\")\r\n            }\r\n          })\r\n          reader.readAsText(file)\r\n        }\r\n        selector = null\r\n      })\r\n      selector.dispatchEvent(new MouseEvent(\"click\"))\r\n    }\r\n  }\r\n\r\n  function calcSelectedTotals() {\r\n    let selectedTotalTime = 0\r\n    let selectedTotalAmount = 0\r\n    console.log(selected)\r\n    todos.map(todo => {\r\n      if (selected.indexOf(todo.id) !== -1) {\r\n        selectedTotalTime += todo.duration\r\n        selectedTotalAmount += todo.money\r\n      }\r\n    })\r\n    setSelectedTotalTime(selectedTotalTime)\r\n    setSelectedTotalAmount(selectedTotalAmount)\r\n  }\r\n\r\n  let active = todos.filter((todo => !todo.completed))\r\n  let completed = todos.filter((todo => todo.completed))\r\n\r\n  let contextData = {\r\n    toggleCheck, \r\n    removeTodo, \r\n    toggleTodo, \r\n    addTodo, \r\n    editTodo, \r\n    addProject, \r\n    toggleGo,\r\n    setIsModalOpen\r\n  }\r\n\r\n  return (\r\n    <Context.Provider value={contextData}>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <div>\r\n            <div style={{padding:0}}>\r\n              <img src=\"./time-2-32.png\" alt=\"Tasknik\"/>&nbsp;\r\n              Tasknik v.{packageJson.version}\r\n            </div>\r\n            <div style={styles.buttons}>\r\n              <button \r\n                style={styles.button} \r\n                onClick={() => (importData())}\r\n                type=\"button\">Импорт</button>\r\n              <button \r\n                style={{...styles.button, ...styles.button2}} \r\n                onClick={() => (exportData())}\r\n                type=\"button\">Экспорт</button>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <div className=\"App-content\">\r\n          <div>\r\n            {active.length? <TodoList title=\"Активные\" todos={active} projects={projects} currentId={currentId} /> : <p>Нет активных задач</p>}\r\n            <h3>Создать</h3>\r\n            <TodoForm projects={projects} />\r\n            <ProjectForm />\r\n            {completed.length? (<TodoList title=\"Завершенные\" todos={completed} projects={projects} currentId={currentId} />) : <p>Нет завершенных задач</p>}\r\n          </div>\r\n        </div>\r\n        <footer className=\"App-footer\">\r\n          <div className=\"totalTimer\" onClick={() => (setIsModalOpen(true))}>\r\n            Всего: {Sec2time(totalTime)} &nbsp;\r\n          </div>\r\n          <span title=\"Сбросить общий таймер\" className=\"action resetTotalAction\" onClick={() => resetTotalTime()}></span>\r\n          \r\n          <div style={{...styles.buttons, paddingRight: \"2rem\"}}>\r\n            <button \r\n              style={{...styles.button, ...styles.button3}} \r\n              onClick={() => calcSelectedTotals()}\r\n              type=\"button\">Итог по выбранным:</button>\r\n            <span>\r\n              &nbsp;{Sec2time(selectedTotalTime)} / {Math.round(selectedTotalAmount)}\r\n            </span>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n      <Modal isOpen={isModalOpen} todos={todos} projects={projects} />\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}